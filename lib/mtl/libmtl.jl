# This file is automatically generated. Do not edit!
# To re-generate, execute res/wrap/wrap.jl

using CEnum: CEnum, @cenum

@cenum MTLTextureSwizzle::UInt8 begin
    MTLTextureSwizzleZero = 0x0000000000000000
    MTLTextureSwizzleOne = 0x0000000000000001
    MTLTextureSwizzleRed = 0x0000000000000002
    MTLTextureSwizzleGreen = 0x0000000000000003
    MTLTextureSwizzleBlue = 0x0000000000000004
    MTLTextureSwizzleAlpha = 0x0000000000000005
end

struct MTLTextureSwizzleChannels
    red::MTLTextureSwizzle
    green::MTLTextureSwizzle
    blue::MTLTextureSwizzle
    alpha::MTLTextureSwizzle
end

function MTLTextureSwizzleChannelsMake(r, g, b, a)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLTextureSwizzleChannelsMake(r::MTLTextureSwizzle, g::MTLTextureSwizzle, b::MTLTextureSwizzle, a::MTLTextureSwizzle)::MTLTextureSwizzleChannels
end

struct MTLOrigin
    x::NSUInteger
    y::NSUInteger
    z::NSUInteger
end

function MTLOriginMake(x, y, z)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLOriginMake(x::NSUInteger, y::NSUInteger, z::NSUInteger)::MTLOrigin
end

struct MTLSize
    width::NSUInteger
    height::NSUInteger
    depth::NSUInteger
end

function MTLSizeMake(width, height, depth)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLSizeMake(width::NSUInteger, height::NSUInteger, depth::NSUInteger)::MTLSize
end

struct MTLRegion
    origin::MTLOrigin
    size::MTLSize
end

function MTLRegionMake1D(x, width)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLRegionMake1D(x::NSUInteger, width::NSUInteger)::MTLRegion
end

function MTLRegionMake2D(x, y, width, height)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLRegionMake2D(x::NSUInteger, y::NSUInteger, width::NSUInteger, height::NSUInteger)::MTLRegion
end

function MTLRegionMake3D(x, y, z, width, height, depth)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLRegionMake3D(x::NSUInteger, y::NSUInteger, z::NSUInteger, width::NSUInteger, height::NSUInteger, depth::NSUInteger)::MTLRegion
end

struct MTLSamplePosition
    x::Cfloat
    y::Cfloat
end

function MTLSamplePositionMake(x, y)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLSamplePositionMake(x::Cfloat, y::Cfloat)::MTLSamplePosition
end

const MTLCoordinate2D = MTLSamplePosition

function MTLCoordinate2DMake(x, y)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLCoordinate2DMake(x::Cfloat, y::Cfloat)::MTLCoordinate2D
end

struct MTLResourceID
    _impl::UInt64
end

@cenum MTLResourceUsage::UInt64 begin
    MTLResourceUsageRead = 0x0000000000000001
    MTLResourceUsageWrite = 0x0000000000000002
    MTLResourceUsageSample = 0x0000000000000004
end

@cenum MTLBarrierScope::UInt64 begin
    MTLBarrierScopeBuffers = 0x0000000000000001
    MTLBarrierScopeTextures = 0x0000000000000002
    MTLBarrierScopeRenderTargets = 0x0000000000000004
end

@objcwrapper immutable = true availability = macos(v"14.0.0") MTLArchitecture <: NSObject

@objcproperties MTLArchitecture begin
    @autoproperty name::id{NSString}
end

@cenum MTLDeviceLocation::UInt64 begin
    MTLDeviceLocationBuiltIn = 0x0000000000000000
    MTLDeviceLocationSlot = 0x0000000000000001
    MTLDeviceLocationExternal = 0x0000000000000002
    MTLDeviceLocationUnspecified = 0xffffffffffffffff
end

@cenum MTLReadWriteTextureTier::UInt64 begin
    MTLReadWriteTextureTierNone = 0x0000000000000000
    MTLReadWriteTextureTier1 = 0x0000000000000001
    MTLReadWriteTextureTier2 = 0x0000000000000002
end

@cenum MTLArgumentBuffersTier::UInt64 begin
    MTLArgumentBuffersTier1 = 0x0000000000000000
    MTLArgumentBuffersTier2 = 0x0000000000000001
end

@objcwrapper immutable = true MTLCounter <: NSObject

@objcproperties MTLCounter begin
    @autoproperty name::id{NSString}
end

@objcwrapper immutable = true MTLCounterSet <: NSObject

@objcproperties MTLCounterSet begin
    @autoproperty name::id{NSString}
    @autoproperty counters::id{NSArray} type = Vector{MTLCounter}
end

@objcwrapper immutable = true MTLDevice <: NSObject

@objcproperties MTLDevice begin
    @autoproperty name::id{NSString}
    @autoproperty registryID::UInt64
    @autoproperty architecture::id{MTLArchitecture} availability = macos(v"14.0.0")
    @autoproperty maxThreadsPerThreadgroup::MTLSize
    @autoproperty lowPower::Bool getter = isLowPower
    @autoproperty headless::Bool getter = isHeadless
    @autoproperty removable::Bool getter = isRemovable
    @autoproperty hasUnifiedMemory::Bool
    @autoproperty recommendedMaxWorkingSetSize::UInt64
    @autoproperty location::MTLDeviceLocation
    @autoproperty locationNumber::UInt64
    @autoproperty maxTransferRate::UInt64
    @autoproperty depth24Stencil8PixelFormatSupported::Bool getter = isDepth24Stencil8PixelFormatSupported
    @autoproperty readWriteTextureSupport::MTLReadWriteTextureTier
    @autoproperty argumentBuffersSupport::MTLArgumentBuffersTier
    @autoproperty rasterOrderGroupsSupported::Bool getter = areRasterOrderGroupsSupported
    @autoproperty supports32BitFloatFiltering::Bool
    @autoproperty supports32BitMSAA::Bool
    @autoproperty supportsQueryTextureLOD::Bool
    @autoproperty supportsBCTextureCompression::Bool
    @autoproperty supportsPullModelInterpolation::Bool
    @autoproperty barycentricCoordsSupported::Bool getter = areBarycentricCoordsSupported
    @autoproperty supportsShaderBarycentricCoordinates::Bool
    @autoproperty currentAllocatedSize::UInt64
    @autoproperty maxThreadgroupMemoryLength::UInt64
    @autoproperty maxArgumentBufferSamplerCount::UInt64
    @autoproperty programmableSamplePositionsSupported::Bool getter = areProgrammableSamplePositionsSupported
    @autoproperty peerGroupID::UInt64
    @autoproperty peerIndex::UInt32
    @autoproperty peerCount::UInt32
    @autoproperty sparseTileSizeInBytes::UInt64
    @autoproperty maxBufferLength::UInt64
    @autoproperty counterSets::id{NSArray} type = Vector{MTLCounterSet}
    @autoproperty supportsDynamicLibraries::Bool
    @autoproperty supportsRenderDynamicLibraries::Bool
    @autoproperty supportsRaytracing::Bool
    @autoproperty supportsFunctionPointers::Bool
    @autoproperty supportsFunctionPointersFromRender::Bool
    @autoproperty supportsRaytracingFromRender::Bool
    @autoproperty supportsPrimitiveMotionBlur::Bool
    @autoproperty shouldMaximizeConcurrentCompilation::Bool setter = setShouldMaximizeConcurrentCompilation availability = macos(v"13.3.0")
    @autoproperty maximumConcurrentCompilationTaskCount::UInt64 availability = macos(v"13.3.0")
end

@objcwrapper immutable = true MTLCommandEncoder <: NSObject

@objcproperties MTLCommandEncoder begin
    @autoproperty device::id{MTLDevice}
    @autoproperty label::id{NSString} setter = setLabel
end

@objcwrapper immutable = true availability = macos(v"15.0.0") MTLAllocation <: NSObject

@objcproperties MTLAllocation begin
    @autoproperty allocatedSize::UInt64
end

@cenum MTLPurgeableState::UInt64 begin
    MTLPurgeableStateKeepCurrent = 0x0000000000000001
    MTLPurgeableStateNonVolatile = 0x0000000000000002
    MTLPurgeableStateVolatile = 0x0000000000000003
    MTLPurgeableStateEmpty = 0x0000000000000004
end

@cenum MTLCPUCacheMode::UInt64 begin
    MTLCPUCacheModeDefaultCache = 0x0000000000000000
    MTLCPUCacheModeWriteCombined = 0x0000000000000001
end

@cenum MTLStorageMode::UInt64 begin
    MTLStorageModeShared = 0x0000000000000000
    MTLStorageModeManaged = 0x0000000000000001
    MTLStorageModePrivate = 0x0000000000000002
    MTLStorageModeMemoryless = 0x0000000000000003
end

@cenum MTLHazardTrackingMode::UInt64 begin
    MTLHazardTrackingModeDefault = 0x0000000000000000
    MTLHazardTrackingModeUntracked = 0x0000000000000001
    MTLHazardTrackingModeTracked = 0x0000000000000002
end

@cenum MTLResourceOptions::UInt64 begin
    MTLResourceCPUCacheModeDefaultCache = 0x0000000000000000
    MTLResourceCPUCacheModeWriteCombined = 0x0000000000000001
    MTLResourceStorageModeShared = 0x0000000000000000
    MTLResourceStorageModeManaged = 0x0000000000000010
    MTLResourceStorageModePrivate = 0x0000000000000020
    MTLResourceStorageModeMemoryless = 0x0000000000000030
    MTLResourceHazardTrackingModeDefault = 0x0000000000000000
    MTLResourceHazardTrackingModeUntracked = 0x0000000000000100
    MTLResourceHazardTrackingModeTracked = 0x0000000000000200
    MTLResourceOptionCPUCacheModeDefault = 0x0000000000000000
    MTLResourceOptionCPUCacheModeWriteCombined = 0x0000000000000001
end

@cenum MTLHeapType::Int64 begin
    MTLHeapTypeAutomatic = 0
    MTLHeapTypePlacement = 1
    MTLHeapTypeSparse = 2
end

@objcwrapper immutable = false MTLHeap <: MTLAllocation

@objcproperties MTLHeap begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty device::id{MTLDevice}
    @autoproperty storageMode::MTLStorageMode
    @autoproperty cpuCacheMode::MTLCPUCacheMode
    @autoproperty hazardTrackingMode::MTLHazardTrackingMode
    @autoproperty resourceOptions::MTLResourceOptions
    @autoproperty size::UInt64
    @autoproperty usedSize::UInt64
    @autoproperty currentAllocatedSize::UInt64
    @autoproperty type::MTLHeapType
end

@objcwrapper immutable = true MTLResource <: MTLAllocation

@objcproperties MTLResource begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty device::id{MTLDevice}
    @autoproperty cpuCacheMode::MTLCPUCacheMode
    @autoproperty storageMode::MTLStorageMode
    @autoproperty hazardTrackingMode::MTLHazardTrackingMode
    @autoproperty resourceOptions::MTLResourceOptions
    @autoproperty heap::id{MTLHeap}
    @autoproperty heapOffset::UInt64
    @autoproperty allocatedSize::UInt64
end

@cenum MTLPixelFormat::UInt64 begin
    MTLPixelFormatInvalid = 0x0000000000000000
    MTLPixelFormatA8Unorm = 0x0000000000000001
    MTLPixelFormatR8Unorm = 0x000000000000000a
    MTLPixelFormatR8Unorm_sRGB = 0x000000000000000b
    MTLPixelFormatR8Snorm = 0x000000000000000c
    MTLPixelFormatR8Uint = 0x000000000000000d
    MTLPixelFormatR8Sint = 0x000000000000000e
    MTLPixelFormatR16Unorm = 0x0000000000000014
    MTLPixelFormatR16Snorm = 0x0000000000000016
    MTLPixelFormatR16Uint = 0x0000000000000017
    MTLPixelFormatR16Sint = 0x0000000000000018
    MTLPixelFormatR16Float = 0x0000000000000019
    MTLPixelFormatRG8Unorm = 0x000000000000001e
    MTLPixelFormatRG8Unorm_sRGB = 0x000000000000001f
    MTLPixelFormatRG8Snorm = 0x0000000000000020
    MTLPixelFormatRG8Uint = 0x0000000000000021
    MTLPixelFormatRG8Sint = 0x0000000000000022
    MTLPixelFormatB5G6R5Unorm = 0x0000000000000028
    MTLPixelFormatA1BGR5Unorm = 0x0000000000000029
    MTLPixelFormatABGR4Unorm = 0x000000000000002a
    MTLPixelFormatBGR5A1Unorm = 0x000000000000002b
    MTLPixelFormatR32Uint = 0x0000000000000035
    MTLPixelFormatR32Sint = 0x0000000000000036
    MTLPixelFormatR32Float = 0x0000000000000037
    MTLPixelFormatRG16Unorm = 0x000000000000003c
    MTLPixelFormatRG16Snorm = 0x000000000000003e
    MTLPixelFormatRG16Uint = 0x000000000000003f
    MTLPixelFormatRG16Sint = 0x0000000000000040
    MTLPixelFormatRG16Float = 0x0000000000000041
    MTLPixelFormatRGBA8Unorm = 0x0000000000000046
    MTLPixelFormatRGBA8Unorm_sRGB = 0x0000000000000047
    MTLPixelFormatRGBA8Snorm = 0x0000000000000048
    MTLPixelFormatRGBA8Uint = 0x0000000000000049
    MTLPixelFormatRGBA8Sint = 0x000000000000004a
    MTLPixelFormatBGRA8Unorm = 0x0000000000000050
    MTLPixelFormatBGRA8Unorm_sRGB = 0x0000000000000051
    MTLPixelFormatRGB10A2Unorm = 0x000000000000005a
    MTLPixelFormatRGB10A2Uint = 0x000000000000005b
    MTLPixelFormatRG11B10Float = 0x000000000000005c
    MTLPixelFormatRGB9E5Float = 0x000000000000005d
    MTLPixelFormatBGR10A2Unorm = 0x000000000000005e
    MTLPixelFormatBGR10_XR = 0x000000000000022a
    MTLPixelFormatBGR10_XR_sRGB = 0x000000000000022b
    MTLPixelFormatRG32Uint = 0x0000000000000067
    MTLPixelFormatRG32Sint = 0x0000000000000068
    MTLPixelFormatRG32Float = 0x0000000000000069
    MTLPixelFormatRGBA16Unorm = 0x000000000000006e
    MTLPixelFormatRGBA16Snorm = 0x0000000000000070
    MTLPixelFormatRGBA16Uint = 0x0000000000000071
    MTLPixelFormatRGBA16Sint = 0x0000000000000072
    MTLPixelFormatRGBA16Float = 0x0000000000000073
    MTLPixelFormatBGRA10_XR = 0x0000000000000228
    MTLPixelFormatBGRA10_XR_sRGB = 0x0000000000000229
    MTLPixelFormatRGBA32Uint = 0x000000000000007b
    MTLPixelFormatRGBA32Sint = 0x000000000000007c
    MTLPixelFormatRGBA32Float = 0x000000000000007d
    MTLPixelFormatBC1_RGBA = 0x0000000000000082
    MTLPixelFormatBC1_RGBA_sRGB = 0x0000000000000083
    MTLPixelFormatBC2_RGBA = 0x0000000000000084
    MTLPixelFormatBC2_RGBA_sRGB = 0x0000000000000085
    MTLPixelFormatBC3_RGBA = 0x0000000000000086
    MTLPixelFormatBC3_RGBA_sRGB = 0x0000000000000087
    MTLPixelFormatBC4_RUnorm = 0x000000000000008c
    MTLPixelFormatBC4_RSnorm = 0x000000000000008d
    MTLPixelFormatBC5_RGUnorm = 0x000000000000008e
    MTLPixelFormatBC5_RGSnorm = 0x000000000000008f
    MTLPixelFormatBC6H_RGBFloat = 0x0000000000000096
    MTLPixelFormatBC6H_RGBUfloat = 0x0000000000000097
    MTLPixelFormatBC7_RGBAUnorm = 0x0000000000000098
    MTLPixelFormatBC7_RGBAUnorm_sRGB = 0x0000000000000099
    MTLPixelFormatPVRTC_RGB_2BPP = 0x00000000000000a0
    MTLPixelFormatPVRTC_RGB_2BPP_sRGB = 0x00000000000000a1
    MTLPixelFormatPVRTC_RGB_4BPP = 0x00000000000000a2
    MTLPixelFormatPVRTC_RGB_4BPP_sRGB = 0x00000000000000a3
    MTLPixelFormatPVRTC_RGBA_2BPP = 0x00000000000000a4
    MTLPixelFormatPVRTC_RGBA_2BPP_sRGB = 0x00000000000000a5
    MTLPixelFormatPVRTC_RGBA_4BPP = 0x00000000000000a6
    MTLPixelFormatPVRTC_RGBA_4BPP_sRGB = 0x00000000000000a7
    MTLPixelFormatEAC_R11Unorm = 0x00000000000000aa
    MTLPixelFormatEAC_R11Snorm = 0x00000000000000ac
    MTLPixelFormatEAC_RG11Unorm = 0x00000000000000ae
    MTLPixelFormatEAC_RG11Snorm = 0x00000000000000b0
    MTLPixelFormatEAC_RGBA8 = 0x00000000000000b2
    MTLPixelFormatEAC_RGBA8_sRGB = 0x00000000000000b3
    MTLPixelFormatETC2_RGB8 = 0x00000000000000b4
    MTLPixelFormatETC2_RGB8_sRGB = 0x00000000000000b5
    MTLPixelFormatETC2_RGB8A1 = 0x00000000000000b6
    MTLPixelFormatETC2_RGB8A1_sRGB = 0x00000000000000b7
    MTLPixelFormatASTC_4x4_sRGB = 0x00000000000000ba
    MTLPixelFormatASTC_5x4_sRGB = 0x00000000000000bb
    MTLPixelFormatASTC_5x5_sRGB = 0x00000000000000bc
    MTLPixelFormatASTC_6x5_sRGB = 0x00000000000000bd
    MTLPixelFormatASTC_6x6_sRGB = 0x00000000000000be
    MTLPixelFormatASTC_8x5_sRGB = 0x00000000000000c0
    MTLPixelFormatASTC_8x6_sRGB = 0x00000000000000c1
    MTLPixelFormatASTC_8x8_sRGB = 0x00000000000000c2
    MTLPixelFormatASTC_10x5_sRGB = 0x00000000000000c3
    MTLPixelFormatASTC_10x6_sRGB = 0x00000000000000c4
    MTLPixelFormatASTC_10x8_sRGB = 0x00000000000000c5
    MTLPixelFormatASTC_10x10_sRGB = 0x00000000000000c6
    MTLPixelFormatASTC_12x10_sRGB = 0x00000000000000c7
    MTLPixelFormatASTC_12x12_sRGB = 0x00000000000000c8
    MTLPixelFormatASTC_4x4_LDR = 0x00000000000000cc
    MTLPixelFormatASTC_5x4_LDR = 0x00000000000000cd
    MTLPixelFormatASTC_5x5_LDR = 0x00000000000000ce
    MTLPixelFormatASTC_6x5_LDR = 0x00000000000000cf
    MTLPixelFormatASTC_6x6_LDR = 0x00000000000000d0
    MTLPixelFormatASTC_8x5_LDR = 0x00000000000000d2
    MTLPixelFormatASTC_8x6_LDR = 0x00000000000000d3
    MTLPixelFormatASTC_8x8_LDR = 0x00000000000000d4
    MTLPixelFormatASTC_10x5_LDR = 0x00000000000000d5
    MTLPixelFormatASTC_10x6_LDR = 0x00000000000000d6
    MTLPixelFormatASTC_10x8_LDR = 0x00000000000000d7
    MTLPixelFormatASTC_10x10_LDR = 0x00000000000000d8
    MTLPixelFormatASTC_12x10_LDR = 0x00000000000000d9
    MTLPixelFormatASTC_12x12_LDR = 0x00000000000000da
    MTLPixelFormatASTC_4x4_HDR = 0x00000000000000de
    MTLPixelFormatASTC_5x4_HDR = 0x00000000000000df
    MTLPixelFormatASTC_5x5_HDR = 0x00000000000000e0
    MTLPixelFormatASTC_6x5_HDR = 0x00000000000000e1
    MTLPixelFormatASTC_6x6_HDR = 0x00000000000000e2
    MTLPixelFormatASTC_8x5_HDR = 0x00000000000000e4
    MTLPixelFormatASTC_8x6_HDR = 0x00000000000000e5
    MTLPixelFormatASTC_8x8_HDR = 0x00000000000000e6
    MTLPixelFormatASTC_10x5_HDR = 0x00000000000000e7
    MTLPixelFormatASTC_10x6_HDR = 0x00000000000000e8
    MTLPixelFormatASTC_10x8_HDR = 0x00000000000000e9
    MTLPixelFormatASTC_10x10_HDR = 0x00000000000000ea
    MTLPixelFormatASTC_12x10_HDR = 0x00000000000000eb
    MTLPixelFormatASTC_12x12_HDR = 0x00000000000000ec
    MTLPixelFormatGBGR422 = 0x00000000000000f0
    MTLPixelFormatBGRG422 = 0x00000000000000f1
    MTLPixelFormatDepth16Unorm = 0x00000000000000fa
    MTLPixelFormatDepth32Float = 0x00000000000000fc
    MTLPixelFormatStencil8 = 0x00000000000000fd
    MTLPixelFormatDepth24Unorm_Stencil8 = 0x00000000000000ff
    MTLPixelFormatDepth32Float_Stencil8 = 0x0000000000000104
    MTLPixelFormatX32_Stencil8 = 0x0000000000000105
    MTLPixelFormatX24_Stencil8 = 0x0000000000000106
end

@objcwrapper immutable = true MTLBuffer <: MTLResource

@objcproperties MTLBuffer begin
    @autoproperty length::UInt64
    @autoproperty remoteStorageBuffer::id{MTLBuffer}
    @autoproperty gpuAddress::UInt64 type = Ptr{Cvoid}
end

@cenum MTLTextureType::UInt64 begin
    MTLTextureType1D = 0x0000000000000000
    MTLTextureType1DArray = 0x0000000000000001
    MTLTextureType2D = 0x0000000000000002
    MTLTextureType2DArray = 0x0000000000000003
    MTLTextureType2DMultisample = 0x0000000000000004
    MTLTextureTypeCube = 0x0000000000000005
    MTLTextureTypeCubeArray = 0x0000000000000006
    MTLTextureType3D = 0x0000000000000007
    MTLTextureType2DMultisampleArray = 0x0000000000000008
    MTLTextureTypeTextureBuffer = 0x0000000000000009
end

@objcwrapper immutable = true MTLSharedTextureHandle <: NSObject

@objcproperties MTLSharedTextureHandle begin
    @autoproperty device::id{MTLDevice}
    @autoproperty label::id{NSString}
end

@cenum MTLTextureUsage::UInt64 begin
    MTLTextureUsageUnknown = 0x0000000000000000
    MTLTextureUsageShaderRead = 0x0000000000000001
    MTLTextureUsageShaderWrite = 0x0000000000000002
    MTLTextureUsageRenderTarget = 0x0000000000000004
    MTLTextureUsagePixelFormatView = 0x0000000000000010
    MTLTextureUsageShaderAtomic = 0x0000000000000020
end

@cenum MTLTextureCompressionType::Int64 begin
    MTLTextureCompressionTypeLossless = 0
    MTLTextureCompressionTypeLossy = 1
end

@objcwrapper immutable = false MTLTextureDescriptor <: NSObject

@objcproperties MTLTextureDescriptor begin
    @autoproperty textureType::MTLTextureType setter = setTextureType
    @autoproperty pixelFormat::MTLPixelFormat setter = setPixelFormat
    @autoproperty width::UInt64 setter = setWidth
    @autoproperty height::UInt64 setter = setHeight
    @autoproperty depth::UInt64 setter = setDepth
    @autoproperty mipmapLevelCount::UInt64 setter = setMipmapLevelCount
    @autoproperty sampleCount::UInt64 setter = setSampleCount
    @autoproperty arrayLength::UInt64 setter = setArrayLength
    @autoproperty resourceOptions::MTLResourceOptions setter = setResourceOptions
    @autoproperty cpuCacheMode::MTLCPUCacheMode setter = setCpuCacheMode
    @autoproperty storageMode::MTLStorageMode setter = setStorageMode
    @autoproperty hazardTrackingMode::MTLHazardTrackingMode setter = setHazardTrackingMode
    @autoproperty usage::MTLTextureUsage setter = setUsage
    @autoproperty allowGPUOptimizedContents::Bool setter = setAllowGPUOptimizedContents
    @autoproperty compressionType::MTLTextureCompressionType setter = setCompressionType
    @autoproperty swizzle::MTLTextureSwizzleChannels setter = setSwizzle
end

@objcwrapper immutable = false MTLTexture <: MTLResource

@objcproperties MTLTexture begin
    @autoproperty rootResource::id{MTLResource}
    @autoproperty parentTexture::id{MTLTexture}
    @autoproperty parentRelativeLevel::UInt64
    @autoproperty parentRelativeSlice::UInt64
    @autoproperty buffer::id{MTLBuffer}
    @autoproperty bufferOffset::UInt64
    @autoproperty bufferBytesPerRow::UInt64
    @autoproperty iosurface::Ptr{Cvoid}
    @autoproperty iosurfacePlane::UInt64
    @autoproperty textureType::MTLTextureType
    @autoproperty pixelFormat::MTLPixelFormat
    @autoproperty width::UInt64
    @autoproperty height::UInt64
    @autoproperty depth::UInt64
    @autoproperty mipmapLevelCount::UInt64
    @autoproperty sampleCount::UInt64
    @autoproperty arrayLength::UInt64
    @autoproperty usage::MTLTextureUsage
    @autoproperty shareable::Bool getter = isShareable
    @autoproperty framebufferOnly::Bool getter = isFramebufferOnly
    @autoproperty firstMipmapInTail::UInt64
    @autoproperty tailSizeInBytes::UInt64
    @autoproperty isSparse::Bool
    @autoproperty allowGPUOptimizedContents::Bool
    @autoproperty compressionType::MTLTextureCompressionType
    @autoproperty gpuResourceID::MTLResourceID
    @autoproperty remoteStorageTexture::id{MTLTexture}
    @autoproperty swizzle::MTLTextureSwizzleChannels
end

@cenum MTLDataType::UInt64 begin
    MTLDataTypeNone = 0x0000000000000000
    MTLDataTypeStruct = 0x0000000000000001
    MTLDataTypeArray = 0x0000000000000002
    MTLDataTypeFloat = 0x0000000000000003
    MTLDataTypeFloat2 = 0x0000000000000004
    MTLDataTypeFloat3 = 0x0000000000000005
    MTLDataTypeFloat4 = 0x0000000000000006
    MTLDataTypeFloat2x2 = 0x0000000000000007
    MTLDataTypeFloat2x3 = 0x0000000000000008
    MTLDataTypeFloat2x4 = 0x0000000000000009
    MTLDataTypeFloat3x2 = 0x000000000000000a
    MTLDataTypeFloat3x3 = 0x000000000000000b
    MTLDataTypeFloat3x4 = 0x000000000000000c
    MTLDataTypeFloat4x2 = 0x000000000000000d
    MTLDataTypeFloat4x3 = 0x000000000000000e
    MTLDataTypeFloat4x4 = 0x000000000000000f
    MTLDataTypeHalf = 0x0000000000000010
    MTLDataTypeHalf2 = 0x0000000000000011
    MTLDataTypeHalf3 = 0x0000000000000012
    MTLDataTypeHalf4 = 0x0000000000000013
    MTLDataTypeHalf2x2 = 0x0000000000000014
    MTLDataTypeHalf2x3 = 0x0000000000000015
    MTLDataTypeHalf2x4 = 0x0000000000000016
    MTLDataTypeHalf3x2 = 0x0000000000000017
    MTLDataTypeHalf3x3 = 0x0000000000000018
    MTLDataTypeHalf3x4 = 0x0000000000000019
    MTLDataTypeHalf4x2 = 0x000000000000001a
    MTLDataTypeHalf4x3 = 0x000000000000001b
    MTLDataTypeHalf4x4 = 0x000000000000001c
    MTLDataTypeInt = 0x000000000000001d
    MTLDataTypeInt2 = 0x000000000000001e
    MTLDataTypeInt3 = 0x000000000000001f
    MTLDataTypeInt4 = 0x0000000000000020
    MTLDataTypeUInt = 0x0000000000000021
    MTLDataTypeUInt2 = 0x0000000000000022
    MTLDataTypeUInt3 = 0x0000000000000023
    MTLDataTypeUInt4 = 0x0000000000000024
    MTLDataTypeShort = 0x0000000000000025
    MTLDataTypeShort2 = 0x0000000000000026
    MTLDataTypeShort3 = 0x0000000000000027
    MTLDataTypeShort4 = 0x0000000000000028
    MTLDataTypeUShort = 0x0000000000000029
    MTLDataTypeUShort2 = 0x000000000000002a
    MTLDataTypeUShort3 = 0x000000000000002b
    MTLDataTypeUShort4 = 0x000000000000002c
    MTLDataTypeChar = 0x000000000000002d
    MTLDataTypeChar2 = 0x000000000000002e
    MTLDataTypeChar3 = 0x000000000000002f
    MTLDataTypeChar4 = 0x0000000000000030
    MTLDataTypeUChar = 0x0000000000000031
    MTLDataTypeUChar2 = 0x0000000000000032
    MTLDataTypeUChar3 = 0x0000000000000033
    MTLDataTypeUChar4 = 0x0000000000000034
    MTLDataTypeBool = 0x0000000000000035
    MTLDataTypeBool2 = 0x0000000000000036
    MTLDataTypeBool3 = 0x0000000000000037
    MTLDataTypeBool4 = 0x0000000000000038
    MTLDataTypeTexture = 0x000000000000003a
    MTLDataTypeSampler = 0x000000000000003b
    MTLDataTypePointer = 0x000000000000003c
    MTLDataTypeR8Unorm = 0x000000000000003e
    MTLDataTypeR8Snorm = 0x000000000000003f
    MTLDataTypeR16Unorm = 0x0000000000000040
    MTLDataTypeR16Snorm = 0x0000000000000041
    MTLDataTypeRG8Unorm = 0x0000000000000042
    MTLDataTypeRG8Snorm = 0x0000000000000043
    MTLDataTypeRG16Unorm = 0x0000000000000044
    MTLDataTypeRG16Snorm = 0x0000000000000045
    MTLDataTypeRGBA8Unorm = 0x0000000000000046
    MTLDataTypeRGBA8Unorm_sRGB = 0x0000000000000047
    MTLDataTypeRGBA8Snorm = 0x0000000000000048
    MTLDataTypeRGBA16Unorm = 0x0000000000000049
    MTLDataTypeRGBA16Snorm = 0x000000000000004a
    MTLDataTypeRGB10A2Unorm = 0x000000000000004b
    MTLDataTypeRG11B10Float = 0x000000000000004c
    MTLDataTypeRGB9E5Float = 0x000000000000004d
    MTLDataTypeRenderPipeline = 0x000000000000004e
    MTLDataTypeComputePipeline = 0x000000000000004f
    MTLDataTypeIndirectCommandBuffer = 0x0000000000000050
    MTLDataTypeLong = 0x0000000000000051
    MTLDataTypeLong2 = 0x0000000000000052
    MTLDataTypeLong3 = 0x0000000000000053
    MTLDataTypeLong4 = 0x0000000000000054
    MTLDataTypeULong = 0x0000000000000055
    MTLDataTypeULong2 = 0x0000000000000056
    MTLDataTypeULong3 = 0x0000000000000057
    MTLDataTypeULong4 = 0x0000000000000058
    MTLDataTypeVisibleFunctionTable = 0x0000000000000073
    MTLDataTypeIntersectionFunctionTable = 0x0000000000000074
    MTLDataTypePrimitiveAccelerationStructure = 0x0000000000000075
    MTLDataTypeInstanceAccelerationStructure = 0x0000000000000076
    MTLDataTypeBFloat = 0x0000000000000079
    MTLDataTypeBFloat2 = 0x000000000000007a
    MTLDataTypeBFloat3 = 0x000000000000007b
    MTLDataTypeBFloat4 = 0x000000000000007c
end

@cenum MTLBindingType::Int64 begin
    MTLBindingTypeBuffer = 0
    MTLBindingTypeThreadgroupMemory = 1
    MTLBindingTypeTexture = 2
    MTLBindingTypeSampler = 3
    MTLBindingTypeImageblockData = 16
    MTLBindingTypeImageblock = 17
    MTLBindingTypeVisibleFunctionTable = 24
    MTLBindingTypePrimitiveAccelerationStructure = 25
    MTLBindingTypeInstanceAccelerationStructure = 26
    MTLBindingTypeIntersectionFunctionTable = 27
    MTLBindingTypeObjectPayload = 34
end

@cenum MTLArgumentType::UInt64 begin
    MTLArgumentTypeBuffer = 0x0000000000000000
    MTLArgumentTypeThreadgroupMemory = 0x0000000000000001
    MTLArgumentTypeTexture = 0x0000000000000002
    MTLArgumentTypeSampler = 0x0000000000000003
    MTLArgumentTypeImageblockData = 0x0000000000000010
    MTLArgumentTypeImageblock = 0x0000000000000011
    MTLArgumentTypeVisibleFunctionTable = 0x0000000000000018
    MTLArgumentTypePrimitiveAccelerationStructure = 0x0000000000000019
    MTLArgumentTypeInstanceAccelerationStructure = 0x000000000000001a
    MTLArgumentTypeIntersectionFunctionTable = 0x000000000000001b
end

@cenum MTLBindingAccess::UInt64 begin
    MTLBindingAccessReadOnly = 0x0000000000000000
    MTLBindingAccessReadWrite = 0x0000000000000001
    MTLBindingAccessWriteOnly = 0x0000000000000002
    MTLArgumentAccessReadOnly = 0x0000000000000000
    MTLArgumentAccessReadWrite = 0x0000000000000001
    MTLArgumentAccessWriteOnly = 0x0000000000000002
end

const MTLArgumentAccess = MTLBindingAccess

@objcwrapper immutable = true MTLType <: NSObject

@objcproperties MTLType begin
    @autoproperty dataType::MTLDataType
end

@objcwrapper immutable = true MTLStructMember <: NSObject

@objcproperties MTLStructMember begin
    @autoproperty name::id{NSString}
    @autoproperty offset::UInt64
    @autoproperty dataType::MTLDataType
    @autoproperty argumentIndex::UInt64
end

@objcwrapper immutable = true MTLStructType <: MTLType

@objcproperties MTLStructType begin
    @autoproperty members::id{NSArray} type = Vector{MTLStructMember}
end

@objcwrapper immutable = true MTLArrayType <: MTLType

@objcproperties MTLArrayType begin
    @autoproperty elementType::MTLDataType
    @autoproperty arrayLength::UInt64
    @autoproperty stride::UInt64
    @autoproperty argumentIndexStride::UInt64
end

@objcwrapper immutable = true MTLPointerType <: MTLType

@objcproperties MTLPointerType begin
    @autoproperty elementType::MTLDataType
    @autoproperty access::MTLBindingAccess
    @autoproperty alignment::UInt64
    @autoproperty dataSize::UInt64
    @autoproperty elementIsArgumentBuffer::Bool
end

@objcwrapper immutable = true MTLTextureReferenceType <: MTLType

@objcproperties MTLTextureReferenceType begin
    @autoproperty textureDataType::MTLDataType
    @autoproperty textureType::MTLTextureType
    @autoproperty access::MTLBindingAccess
    @autoproperty isDepthTexture::Bool
end

@objcwrapper immutable = true MTLArgument <: NSObject

@objcproperties MTLArgument begin
    @autoproperty name::id{NSString}
    @autoproperty type::MTLArgumentType
    @autoproperty access::MTLBindingAccess
    @autoproperty index::UInt64
    @autoproperty active::Bool getter = isActive
    @autoproperty bufferAlignment::UInt64
    @autoproperty bufferDataSize::UInt64
    @autoproperty bufferDataType::MTLDataType
    @autoproperty bufferStructType::id{MTLStructType}
    @autoproperty bufferPointerType::id{MTLPointerType}
    @autoproperty threadgroupMemoryAlignment::UInt64
    @autoproperty threadgroupMemoryDataSize::UInt64
    @autoproperty textureType::MTLTextureType
    @autoproperty textureDataType::MTLDataType
    @autoproperty isDepthTexture::Bool
    @autoproperty arrayLength::UInt64
end

@objcwrapper immutable = true MTLBinding <: NSObject

@objcproperties MTLBinding begin
    @autoproperty name::id{NSString}
    @autoproperty type::MTLBindingType
    @autoproperty access::MTLBindingAccess
    @autoproperty index::UInt64
    @autoproperty used::Bool getter = isUsed
    @autoproperty argument::Bool getter = isArgument
end

@objcwrapper immutable = true MTLBufferBinding <: MTLBinding

@objcproperties MTLBufferBinding begin
    @autoproperty bufferAlignment::UInt64
    @autoproperty bufferDataSize::UInt64
    @autoproperty bufferDataType::MTLDataType
    @autoproperty bufferStructType::id{MTLStructType}
    @autoproperty bufferPointerType::id{MTLPointerType}
end

@objcwrapper immutable = true MTLThreadgroupBinding <: MTLBinding

@objcproperties MTLThreadgroupBinding begin
    @autoproperty threadgroupMemoryAlignment::UInt64
    @autoproperty threadgroupMemoryDataSize::UInt64
end

@objcwrapper immutable = true MTLTextureBinding <: MTLBinding

@objcproperties MTLTextureBinding begin
    @autoproperty textureType::MTLTextureType
    @autoproperty textureDataType::MTLDataType
    @autoproperty depthTexture::Bool getter = isDepthTexture
    @autoproperty arrayLength::UInt64
end

@objcwrapper immutable = true MTLObjectPayloadBinding <: MTLBinding

@objcproperties MTLObjectPayloadBinding begin
    @autoproperty objectPayloadAlignment::UInt64
    @autoproperty objectPayloadDataSize::UInt64
end

@objcwrapper immutable = true MTLFunctionConstantValues <: NSObject

@cenum MTLFunctionOptions::UInt64 begin
    MTLFunctionOptionNone = 0x0000000000000000
    MTLFunctionOptionCompileToBinary = 0x0000000000000001
    MTLFunctionOptionStoreFunctionInMetalPipelinesScript = 0x0000000000000002
    MTLFunctionOptionStoreFunctionInMetalScript = 0x0000000000000002
    MTLFunctionOptionFailOnBinaryArchiveMiss = 0x0000000000000004
end

@objcwrapper immutable = false MTLBinaryArchive <: NSObject

@objcproperties MTLBinaryArchive begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty device::id{MTLDevice}
end

@objcwrapper immutable = false MTLFunctionDescriptor <: NSObject

@objcproperties MTLFunctionDescriptor begin
    @autoproperty name::id{NSString} setter = setName
    @autoproperty specializedName::id{NSString} setter = setSpecializedName
    @autoproperty constantValues::id{MTLFunctionConstantValues} setter = setConstantValues
    @autoproperty options::MTLFunctionOptions setter = setOptions
    @autoproperty binaryArchives::id{NSArray} type = Vector{MTLBinaryArchive} setter = setBinaryArchives
end

@objcwrapper immutable = true MTLIntersectionFunctionDescriptor <: MTLFunctionDescriptor

@cenum MTLPatchType::UInt64 begin
    MTLPatchTypeNone = 0x0000000000000000
    MTLPatchTypeTriangle = 0x0000000000000001
    MTLPatchTypeQuad = 0x0000000000000002
end

@objcwrapper immutable = true MTLVertexAttribute <: NSObject

@objcproperties MTLVertexAttribute begin
    @autoproperty name::id{NSString}
    @autoproperty attributeIndex::UInt64
    @autoproperty attributeType::MTLDataType
    @autoproperty active::Bool getter = isActive
    @autoproperty patchData::Bool getter = isPatchData
    @autoproperty patchControlPointData::Bool getter = isPatchControlPointData
end

@objcwrapper immutable = true MTLAttribute <: NSObject

@objcproperties MTLAttribute begin
    @autoproperty name::id{NSString}
    @autoproperty attributeIndex::UInt64
    @autoproperty attributeType::MTLDataType
    @autoproperty active::Bool getter = isActive
    @autoproperty patchData::Bool getter = isPatchData
    @autoproperty patchControlPointData::Bool getter = isPatchControlPointData
end

@cenum MTLFunctionType::UInt64 begin
    MTLFunctionTypeVertex = 0x0000000000000001
    MTLFunctionTypeFragment = 0x0000000000000002
    MTLFunctionTypeKernel = 0x0000000000000003
    MTLFunctionTypeVisible = 0x0000000000000005
    MTLFunctionTypeIntersection = 0x0000000000000006
    MTLFunctionTypeMesh = 0x0000000000000007
    MTLFunctionTypeObject = 0x0000000000000008
end

@objcwrapper immutable = true MTLFunctionConstant <: NSObject

@objcproperties MTLFunctionConstant begin
    @autoproperty name::id{NSString}
    @autoproperty type::MTLDataType
    @autoproperty index::UInt64
    @autoproperty required::Bool
end

@objcwrapper immutable = false MTLFunction <: NSObject

@objcproperties MTLFunction begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty device::id{MTLDevice}
    @autoproperty functionType::MTLFunctionType
    @autoproperty patchType::MTLPatchType
    @autoproperty patchControlPointCount::Int64
    @autoproperty vertexAttributes::id{NSArray} type = Vector{MTLVertexAttribute}
    @autoproperty stageInputAttributes::id{NSArray} type = Vector{MTLAttribute}
    @autoproperty name::id{NSString}
    @autoproperty functionConstantsDictionary::id{NSDictionary}
    @autoproperty options::MTLFunctionOptions
end

@cenum MTLLanguageVersion::UInt64 begin
    MTLLanguageVersion1_0 = 0x0000000000010000
    MTLLanguageVersion1_1 = 0x0000000000010001
    MTLLanguageVersion1_2 = 0x0000000000010002
    MTLLanguageVersion2_0 = 0x0000000000020000
    MTLLanguageVersion2_1 = 0x0000000000020001
    MTLLanguageVersion2_2 = 0x0000000000020002
    MTLLanguageVersion2_3 = 0x0000000000020003
    MTLLanguageVersion2_4 = 0x0000000000020004
    MTLLanguageVersion3_0 = 0x0000000000030000
    MTLLanguageVersion3_1 = 0x0000000000030001
    MTLLanguageVersion3_2 = 0x0000000000030002
end

@cenum MTLLibraryType::Int64 begin
    MTLLibraryTypeExecutable = 0
    MTLLibraryTypeDynamic = 1
end

@cenum MTLLibraryOptimizationLevel::Int64 begin
    MTLLibraryOptimizationLevelDefault = 0
    MTLLibraryOptimizationLevelSize = 1
end

@cenum MTLCompileSymbolVisibility::Int64 begin
    MTLCompileSymbolVisibilityDefault = 0
    MTLCompileSymbolVisibilityHidden = 1
end

@cenum MTLMathMode::Int64 begin
    MTLMathModeSafe = 0
    MTLMathModeRelaxed = 1
    MTLMathModeFast = 2
end

@cenum MTLMathFloatingPointFunctions::Int64 begin
    MTLMathFloatingPointFunctionsFast = 0
    MTLMathFloatingPointFunctionsPrecise = 1
end

@objcwrapper immutable = true MTLDynamicLibrary <: NSObject

@objcproperties MTLDynamicLibrary begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty device::id{MTLDevice}
    @autoproperty installName::id{NSString}
end

@objcwrapper immutable = false MTLCompileOptions <: NSObject

@objcproperties MTLCompileOptions begin
    @autoproperty preprocessorMacros::id{NSDictionary} setter = setPreprocessorMacros
    @autoproperty fastMathEnabled::Bool setter = setFastMathEnabled
    @autoproperty mathMode::MTLMathMode setter = setMathMode availability = macos(v"15.0.0")
    @autoproperty mathFloatingPointFunctions::MTLMathFloatingPointFunctions setter = setMathFloatingPointFunctions availability = macos(v"15.0.0")
    @autoproperty languageVersion::MTLLanguageVersion type = VersionNumber setter = setLanguageVersion
    @autoproperty libraryType::MTLLibraryType setter = setLibraryType
    @autoproperty installName::id{NSString} setter = setInstallName
    @autoproperty libraries::id{NSArray} type = Vector{MTLDynamicLibrary} setter = setLibraries
    @autoproperty preserveInvariance::Bool setter = setPreserveInvariance
    @autoproperty optimizationLevel::MTLLibraryOptimizationLevel setter = setOptimizationLevel
    @autoproperty compileSymbolVisibility::MTLCompileSymbolVisibility setter = setCompileSymbolVisibility availability = macos(v"13.3.0")
    @autoproperty allowReferencingUndefinedSymbols::Bool setter = setAllowReferencingUndefinedSymbols availability = macos(v"13.3.0")
    @autoproperty maxTotalThreadsPerThreadgroup::UInt64 setter = setMaxTotalThreadsPerThreadgroup availability = macos(v"13.3.0")
    @autoproperty enableLogging::Bool setter = setEnableLogging availability = macos(v"15.0.0")
end

@cenum MTLLibraryError::UInt64 begin
    MTLLibraryErrorUnsupported = 0x0000000000000001
    MTLLibraryErrorInternal = 0x0000000000000002
    MTLLibraryErrorCompileFailure = 0x0000000000000003
    MTLLibraryErrorCompileWarning = 0x0000000000000004
    MTLLibraryErrorFunctionNotFound = 0x0000000000000005
    MTLLibraryErrorFileNotFound = 0x0000000000000006
end

@objcwrapper immutable = false MTLLibrary <: NSObject

@objcproperties MTLLibrary begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty device::id{MTLDevice}
    @autoproperty functionNames::id{NSArray} type = Vector{NSString}
    @autoproperty type::MTLLibraryType
    @autoproperty installName::id{NSString}
end

struct MTLCounterResultTimestamp
    timestamp::UInt64
end

struct MTLCounterResultStageUtilization
    totalCycles::UInt64
    vertexCycles::UInt64
    tessellationCycles::UInt64
    postTessellationVertexCycles::UInt64
    fragmentCycles::UInt64
    renderTargetCycles::UInt64
end

struct MTLCounterResultStatistic
    tessellationInputPatches::UInt64
    vertexInvocations::UInt64
    postTessellationVertexInvocations::UInt64
    clipperInvocations::UInt64
    clipperPrimitivesOut::UInt64
    fragmentInvocations::UInt64
    fragmentsPassed::UInt64
    computeKernelInvocations::UInt64
end

@objcwrapper immutable = true MTLCounterSampleBufferDescriptor <: NSObject

@objcproperties MTLCounterSampleBufferDescriptor begin
    @autoproperty counterSet::id{MTLCounterSet} setter = setCounterSet
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty storageMode::MTLStorageMode setter = setStorageMode
    @autoproperty sampleCount::UInt64 setter = setSampleCount
end

@objcwrapper immutable = true MTLCounterSampleBuffer <: NSObject

@objcproperties MTLCounterSampleBuffer begin
    @autoproperty device::id{MTLDevice}
    @autoproperty label::id{NSString}
    @autoproperty sampleCount::UInt64
end

@cenum MTLCounterSampleBufferError::Int64 begin
    MTLCounterSampleBufferErrorOutOfMemory = 0
    MTLCounterSampleBufferErrorInvalid = 1
    MTLCounterSampleBufferErrorInternal = 2
end

@cenum MTLIOCompressionMethod::Int64 begin
    MTLIOCompressionMethodZlib = 0
    MTLIOCompressionMethodLZFSE = 1
    MTLIOCompressionMethodLZ4 = 2
    MTLIOCompressionMethodLZMA = 3
    MTLIOCompressionMethodLZBitmap = 4
end

@cenum MTLFeatureSet::UInt64 begin
    MTLFeatureSet_iOS_GPUFamily1_v1 = 0x0000000000000000
    MTLFeatureSet_iOS_GPUFamily2_v1 = 0x0000000000000001
    MTLFeatureSet_iOS_GPUFamily1_v2 = 0x0000000000000002
    MTLFeatureSet_iOS_GPUFamily2_v2 = 0x0000000000000003
    MTLFeatureSet_iOS_GPUFamily3_v1 = 0x0000000000000004
    MTLFeatureSet_iOS_GPUFamily1_v3 = 0x0000000000000005
    MTLFeatureSet_iOS_GPUFamily2_v3 = 0x0000000000000006
    MTLFeatureSet_iOS_GPUFamily3_v2 = 0x0000000000000007
    MTLFeatureSet_iOS_GPUFamily1_v4 = 0x0000000000000008
    MTLFeatureSet_iOS_GPUFamily2_v4 = 0x0000000000000009
    MTLFeatureSet_iOS_GPUFamily3_v3 = 0x000000000000000a
    MTLFeatureSet_iOS_GPUFamily4_v1 = 0x000000000000000b
    MTLFeatureSet_iOS_GPUFamily1_v5 = 0x000000000000000c
    MTLFeatureSet_iOS_GPUFamily2_v5 = 0x000000000000000d
    MTLFeatureSet_iOS_GPUFamily3_v4 = 0x000000000000000e
    MTLFeatureSet_iOS_GPUFamily4_v2 = 0x000000000000000f
    MTLFeatureSet_iOS_GPUFamily5_v1 = 0x0000000000000010
    MTLFeatureSet_macOS_GPUFamily1_v1 = 0x0000000000002710
    MTLFeatureSet_OSX_GPUFamily1_v1 = 0x0000000000002710
    MTLFeatureSet_macOS_GPUFamily1_v2 = 0x0000000000002711
    MTLFeatureSet_OSX_GPUFamily1_v2 = 0x0000000000002711
    MTLFeatureSet_macOS_ReadWriteTextureTier2 = 0x0000000000002712
    MTLFeatureSet_OSX_ReadWriteTextureTier2 = 0x0000000000002712
    MTLFeatureSet_macOS_GPUFamily1_v3 = 0x0000000000002713
    MTLFeatureSet_macOS_GPUFamily1_v4 = 0x0000000000002714
    MTLFeatureSet_macOS_GPUFamily2_v1 = 0x0000000000002715
    MTLFeatureSet_tvOS_GPUFamily1_v1 = 0x0000000000007530
    MTLFeatureSet_TVOS_GPUFamily1_v1 = 0x0000000000007530
    MTLFeatureSet_tvOS_GPUFamily1_v2 = 0x0000000000007531
    MTLFeatureSet_tvOS_GPUFamily1_v3 = 0x0000000000007532
    MTLFeatureSet_tvOS_GPUFamily2_v1 = 0x0000000000007533
    MTLFeatureSet_tvOS_GPUFamily1_v4 = 0x0000000000007534
    MTLFeatureSet_tvOS_GPUFamily2_v2 = 0x0000000000007535
end

@cenum MTLGPUFamily::Int64 begin
    MTLGPUFamilyApple1 = 1001
    MTLGPUFamilyApple2 = 1002
    MTLGPUFamilyApple3 = 1003
    MTLGPUFamilyApple4 = 1004
    MTLGPUFamilyApple5 = 1005
    MTLGPUFamilyApple6 = 1006
    MTLGPUFamilyApple7 = 1007
    MTLGPUFamilyApple8 = 1008
    MTLGPUFamilyApple9 = 1009
    MTLGPUFamilyMac1 = 2001
    MTLGPUFamilyMac2 = 2002
    MTLGPUFamilyCommon1 = 3001
    MTLGPUFamilyCommon2 = 3002
    MTLGPUFamilyCommon3 = 3003
    MTLGPUFamilyMacCatalyst1 = 4001
    MTLGPUFamilyMacCatalyst2 = 4002
    MTLGPUFamilyMetal3 = 5001
end

@cenum MTLPipelineOption::UInt64 begin
    MTLPipelineOptionNone = 0x0000000000000000
    MTLPipelineOptionArgumentInfo = 0x0000000000000001
    MTLPipelineOptionBindingInfo = 0x0000000000000001
    MTLPipelineOptionBufferTypeInfo = 0x0000000000000002
    MTLPipelineOptionFailOnBinaryArchiveMiss = 0x0000000000000004
end

@cenum MTLSparseTextureRegionAlignmentMode::UInt64 begin
    MTLSparseTextureRegionAlignmentModeOutward = 0x0000000000000000
    MTLSparseTextureRegionAlignmentModeInward = 0x0000000000000001
end

@cenum MTLSparsePageSize::Int64 begin
    MTLSparsePageSize16 = 101
    MTLSparsePageSize64 = 102
    MTLSparsePageSize256 = 103
end

struct MTLAccelerationStructureSizes
    accelerationStructureSize::NSUInteger
    buildScratchBufferSize::NSUInteger
    refitScratchBufferSize::NSUInteger
end

@cenum MTLCounterSamplingPoint::UInt64 begin
    MTLCounterSamplingPointAtStageBoundary = 0x0000000000000000
    MTLCounterSamplingPointAtDrawBoundary = 0x0000000000000001
    MTLCounterSamplingPointAtDispatchBoundary = 0x0000000000000002
    MTLCounterSamplingPointAtTileDispatchBoundary = 0x0000000000000003
    MTLCounterSamplingPointAtBlitBoundary = 0x0000000000000004
end

struct MTLSizeAndAlign
    size::NSUInteger
    align::NSUInteger
end

@objcwrapper immutable = true MTLArgumentDescriptor <: NSObject

@objcproperties MTLArgumentDescriptor begin
    @autoproperty dataType::MTLDataType setter = setDataType
    @autoproperty index::UInt64 setter = setIndex
    @autoproperty arrayLength::UInt64 setter = setArrayLength
    @autoproperty access::MTLBindingAccess setter = setAccess
    @autoproperty textureType::MTLTextureType setter = setTextureType
    @autoproperty constantBlockAlignment::UInt64 setter = setConstantBlockAlignment
end

const MTLTimestamp = UInt64

@objcwrapper immutable = false MTLFence <: NSObject

@objcproperties MTLFence begin
    @autoproperty device::id{MTLDevice}
    @autoproperty label::id{NSString} setter = setLabel
end

@objcwrapper immutable = true MTLResourceStatePassSampleBufferAttachmentDescriptor <: NSObject

@objcproperties MTLResourceStatePassSampleBufferAttachmentDescriptor begin
    @autoproperty sampleBuffer::id{MTLCounterSampleBuffer} setter = setSampleBuffer
    @autoproperty startOfEncoderSampleIndex::UInt64 setter = setStartOfEncoderSampleIndex
    @autoproperty endOfEncoderSampleIndex::UInt64 setter = setEndOfEncoderSampleIndex
end

@objcwrapper immutable = true MTLResourceStatePassSampleBufferAttachmentDescriptorArray <: NSObject

@objcwrapper immutable = true MTLResourceStatePassDescriptor <: NSObject

@objcproperties MTLResourceStatePassDescriptor begin
    @autoproperty sampleBufferAttachments::id{MTLResourceStatePassSampleBufferAttachmentDescriptorArray}
end

@cenum MTLSparseTextureMappingMode::UInt64 begin
    MTLSparseTextureMappingModeMap = 0x0000000000000000
    MTLSparseTextureMappingModeUnmap = 0x0000000000000001
end

struct MTLMapIndirectArguments
    regionOriginX::UInt32
    regionOriginY::UInt32
    regionOriginZ::UInt32
    regionSizeWidth::UInt32
    regionSizeHeight::UInt32
    regionSizeDepth::UInt32
    mipMapLevel::UInt32
    sliceId::UInt32
end

@objcwrapper immutable = true MTLResourceStateCommandEncoder <: MTLCommandEncoder

struct MTLClearColor
    red::Cdouble
    green::Cdouble
    blue::Cdouble
    alpha::Cdouble
end

function MTLClearColorMake(red, green, blue, alpha)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLClearColorMake(red::Cdouble, green::Cdouble, blue::Cdouble, alpha::Cdouble)::MTLClearColor
end

@cenum MTLLoadAction::UInt64 begin
    MTLLoadActionDontCare = 0x0000000000000000
    MTLLoadActionLoad = 0x0000000000000001
    MTLLoadActionClear = 0x0000000000000002
end

@cenum MTLStoreAction::UInt64 begin
    MTLStoreActionDontCare = 0x0000000000000000
    MTLStoreActionStore = 0x0000000000000001
    MTLStoreActionMultisampleResolve = 0x0000000000000002
    MTLStoreActionStoreAndMultisampleResolve = 0x0000000000000003
    MTLStoreActionUnknown = 0x0000000000000004
    MTLStoreActionCustomSampleDepthStore = 0x0000000000000005
end

@cenum MTLStoreActionOptions::UInt64 begin
    MTLStoreActionOptionNone = 0x0000000000000000
    MTLStoreActionOptionCustomSamplePositions = 0x0000000000000001
end

@objcwrapper immutable = true MTLRenderPassAttachmentDescriptor <: NSObject

@objcproperties MTLRenderPassAttachmentDescriptor begin
    @autoproperty texture::id{MTLTexture} setter = setTexture
    @autoproperty level::UInt64 setter = setLevel
    @autoproperty slice::UInt64 setter = setSlice
    @autoproperty depthPlane::UInt64 setter = setDepthPlane
    @autoproperty resolveTexture::id{MTLTexture} setter = setResolveTexture
    @autoproperty resolveLevel::UInt64 setter = setResolveLevel
    @autoproperty resolveSlice::UInt64 setter = setResolveSlice
    @autoproperty resolveDepthPlane::UInt64 setter = setResolveDepthPlane
    @autoproperty loadAction::MTLLoadAction setter = setLoadAction
    @autoproperty storeAction::MTLStoreAction setter = setStoreAction
    @autoproperty storeActionOptions::MTLStoreActionOptions setter = setStoreActionOptions
end

@objcwrapper immutable = true MTLRenderPassColorAttachmentDescriptor <: MTLRenderPassAttachmentDescriptor

@objcproperties MTLRenderPassColorAttachmentDescriptor begin
    @autoproperty clearColor::MTLClearColor setter = setClearColor
end

@cenum MTLMultisampleDepthResolveFilter::UInt64 begin
    MTLMultisampleDepthResolveFilterSample0 = 0x0000000000000000
    MTLMultisampleDepthResolveFilterMin = 0x0000000000000001
    MTLMultisampleDepthResolveFilterMax = 0x0000000000000002
end

@objcwrapper immutable = true MTLRenderPassDepthAttachmentDescriptor <: MTLRenderPassAttachmentDescriptor

@objcproperties MTLRenderPassDepthAttachmentDescriptor begin
    @autoproperty clearDepth::Cdouble setter = setClearDepth
    @autoproperty depthResolveFilter::MTLMultisampleDepthResolveFilter setter = setDepthResolveFilter
end

@cenum MTLMultisampleStencilResolveFilter::UInt64 begin
    MTLMultisampleStencilResolveFilterSample0 = 0x0000000000000000
    MTLMultisampleStencilResolveFilterDepthResolvedSample = 0x0000000000000001
end

@objcwrapper immutable = true MTLRenderPassStencilAttachmentDescriptor <: MTLRenderPassAttachmentDescriptor

@objcproperties MTLRenderPassStencilAttachmentDescriptor begin
    @autoproperty clearStencil::UInt32 setter = setClearStencil
    @autoproperty stencilResolveFilter::MTLMultisampleStencilResolveFilter setter = setStencilResolveFilter
end

@objcwrapper immutable = true MTLRenderPassColorAttachmentDescriptorArray <: NSObject

@objcwrapper immutable = true MTLRenderPassSampleBufferAttachmentDescriptor <: NSObject

@objcproperties MTLRenderPassSampleBufferAttachmentDescriptor begin
    @autoproperty sampleBuffer::id{MTLCounterSampleBuffer} setter = setSampleBuffer
    @autoproperty startOfVertexSampleIndex::UInt64 setter = setStartOfVertexSampleIndex
    @autoproperty endOfVertexSampleIndex::UInt64 setter = setEndOfVertexSampleIndex
    @autoproperty startOfFragmentSampleIndex::UInt64 setter = setStartOfFragmentSampleIndex
    @autoproperty endOfFragmentSampleIndex::UInt64 setter = setEndOfFragmentSampleIndex
end

@objcwrapper immutable = true MTLRenderPassSampleBufferAttachmentDescriptorArray <: NSObject

@objcwrapper immutable = true MTLRasterizationRateMap <: NSObject

@objcproperties MTLRasterizationRateMap begin
    @autoproperty device::id{MTLDevice}
    @autoproperty label::id{NSString}
    @autoproperty screenSize::MTLSize
    @autoproperty physicalGranularity::MTLSize
    @autoproperty layerCount::UInt64
    @autoproperty parameterBufferSizeAndAlign::MTLSizeAndAlign
end

@objcwrapper immutable = true MTLRenderPassDescriptor <: NSObject

@objcproperties MTLRenderPassDescriptor begin
    @autoproperty colorAttachments::id{MTLRenderPassColorAttachmentDescriptorArray}
    @autoproperty depthAttachment::id{MTLRenderPassDepthAttachmentDescriptor} setter = setDepthAttachment
    @autoproperty stencilAttachment::id{MTLRenderPassStencilAttachmentDescriptor} setter = setStencilAttachment
    @autoproperty visibilityResultBuffer::id{MTLBuffer} setter = setVisibilityResultBuffer
    @autoproperty renderTargetArrayLength::UInt64 setter = setRenderTargetArrayLength
    @autoproperty imageblockSampleLength::UInt64 setter = setImageblockSampleLength
    @autoproperty threadgroupMemoryLength::UInt64 setter = setThreadgroupMemoryLength
    @autoproperty tileWidth::UInt64 setter = setTileWidth
    @autoproperty tileHeight::UInt64 setter = setTileHeight
    @autoproperty defaultRasterSampleCount::UInt64 setter = setDefaultRasterSampleCount
    @autoproperty renderTargetWidth::UInt64 setter = setRenderTargetWidth
    @autoproperty renderTargetHeight::UInt64 setter = setRenderTargetHeight
    @autoproperty rasterizationRateMap::id{MTLRasterizationRateMap} setter = setRasterizationRateMap
    @autoproperty sampleBufferAttachments::id{MTLRenderPassSampleBufferAttachmentDescriptorArray}
end

@objcwrapper immutable = true MTLBlitPassSampleBufferAttachmentDescriptor <: NSObject

@objcproperties MTLBlitPassSampleBufferAttachmentDescriptor begin
    @autoproperty sampleBuffer::id{MTLCounterSampleBuffer} setter = setSampleBuffer
    @autoproperty startOfEncoderSampleIndex::UInt64 setter = setStartOfEncoderSampleIndex
    @autoproperty endOfEncoderSampleIndex::UInt64 setter = setEndOfEncoderSampleIndex
end

@objcwrapper immutable = true MTLBlitPassSampleBufferAttachmentDescriptorArray <: NSObject

@objcwrapper immutable = true MTLBlitPassDescriptor <: NSObject

@objcproperties MTLBlitPassDescriptor begin
    @autoproperty sampleBufferAttachments::id{MTLBlitPassSampleBufferAttachmentDescriptorArray}
end

@cenum MTLBlitOption::UInt64 begin
    MTLBlitOptionNone = 0x0000000000000000
    MTLBlitOptionDepthFromDepthStencil = 0x0000000000000001
    MTLBlitOptionStencilFromDepthStencil = 0x0000000000000002
    MTLBlitOptionRowLinearPVRTC = 0x0000000000000004
end

@objcwrapper immutable = true MTLBlitCommandEncoder <: MTLCommandEncoder

@cenum MTLCommandBufferStatus::UInt64 begin
    MTLCommandBufferStatusNotEnqueued = 0x0000000000000000
    MTLCommandBufferStatusEnqueued = 0x0000000000000001
    MTLCommandBufferStatusCommitted = 0x0000000000000002
    MTLCommandBufferStatusScheduled = 0x0000000000000003
    MTLCommandBufferStatusCompleted = 0x0000000000000004
    MTLCommandBufferStatusError = 0x0000000000000005
end

@cenum MTLCommandBufferError::UInt64 begin
    MTLCommandBufferErrorNone = 0x0000000000000000
    MTLCommandBufferErrorInternal = 0x0000000000000001
    MTLCommandBufferErrorTimeout = 0x0000000000000002
    MTLCommandBufferErrorPageFault = 0x0000000000000003
    MTLCommandBufferErrorBlacklisted = 0x0000000000000004
    MTLCommandBufferErrorAccessRevoked = 0x0000000000000004
    MTLCommandBufferErrorNotPermitted = 0x0000000000000007
    MTLCommandBufferErrorOutOfMemory = 0x0000000000000008
    MTLCommandBufferErrorInvalidResource = 0x0000000000000009
    MTLCommandBufferErrorMemoryless = 0x000000000000000a
    MTLCommandBufferErrorDeviceRemoved = 0x000000000000000b
    MTLCommandBufferErrorStackOverflow = 0x000000000000000c
end

@cenum MTLCommandBufferErrorOption::UInt64 begin
    MTLCommandBufferErrorOptionNone = 0x0000000000000000
    MTLCommandBufferErrorOptionEncoderExecutionStatus = 0x0000000000000001
end

@cenum MTLCommandEncoderErrorState::Int64 begin
    MTLCommandEncoderErrorStateUnknown = 0
    MTLCommandEncoderErrorStateCompleted = 1
    MTLCommandEncoderErrorStateAffected = 2
    MTLCommandEncoderErrorStatePending = 3
    MTLCommandEncoderErrorStateFaulted = 4
end

@objcwrapper immutable = true availability = macos(v"15.0.0") MTLLogState <: NSObject

@objcwrapper immutable = false MTLCommandBufferDescriptor <: NSObject

@objcproperties MTLCommandBufferDescriptor begin
    @autoproperty retainedReferences::Bool setter = setRetainedReferences
    @autoproperty errorOptions::MTLCommandBufferErrorOption setter = setErrorOptions
    @autoproperty logState::id{MTLLogState} setter = setLogState availability = macos(v"15.0.0")
end

@objcwrapper immutable = true MTLCommandBufferEncoderInfo <: NSObject

@objcproperties MTLCommandBufferEncoderInfo begin
    @autoproperty label::id{NSString}
    @autoproperty debugSignposts::id{NSArray} type = Vector{NSString}
    @autoproperty errorState::MTLCommandEncoderErrorState
end

@cenum MTLDispatchType::UInt64 begin
    MTLDispatchTypeSerial = 0x0000000000000000
    MTLDispatchTypeConcurrent = 0x0000000000000001
end

@objcwrapper immutable = false MTLCommandQueue <: NSObject

@objcproperties MTLCommandQueue begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty device::id{MTLDevice}
end

@objcwrapper immutable = true MTLLogContainer <: NSObject

@objcwrapper immutable = true MTLCommandBuffer <: NSObject

@objcproperties MTLCommandBuffer begin
    @autoproperty device::id{MTLDevice}
    @autoproperty commandQueue::id{MTLCommandQueue}
    @autoproperty retainedReferences::Bool
    @autoproperty errorOptions::MTLCommandBufferErrorOption
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty kernelStartTime::Cdouble
    @autoproperty kernelEndTime::Cdouble
    @autoproperty logs::id{MTLLogContainer}
    @autoproperty GPUStartTime::Cdouble
    @autoproperty GPUEndTime::Cdouble
    @autoproperty status::MTLCommandBufferStatus
    @autoproperty error::id{NSError}
end

@objcwrapper immutable = true MTLComputePassSampleBufferAttachmentDescriptor <: NSObject

@objcproperties MTLComputePassSampleBufferAttachmentDescriptor begin
    @autoproperty sampleBuffer::id{MTLCounterSampleBuffer} setter = setSampleBuffer
    @autoproperty startOfEncoderSampleIndex::UInt64 setter = setStartOfEncoderSampleIndex
    @autoproperty endOfEncoderSampleIndex::UInt64 setter = setEndOfEncoderSampleIndex
end

@objcwrapper immutable = true MTLComputePassSampleBufferAttachmentDescriptorArray <: NSObject

@objcwrapper immutable = true MTLComputePassDescriptor <: NSObject

@objcproperties MTLComputePassDescriptor begin
    @autoproperty dispatchType::MTLDispatchType setter = setDispatchType
    @autoproperty sampleBufferAttachments::id{MTLComputePassSampleBufferAttachmentDescriptorArray}
end

struct MTLDispatchThreadgroupsIndirectArguments
    threadgroupsPerGrid::NTuple{3, UInt32}
end

struct MTLStageInRegionIndirectArguments
    stageInOrigin::NTuple{3, UInt32}
    stageInSize::NTuple{3, UInt32}
end

@objcwrapper immutable = false MTLComputeCommandEncoder <: MTLCommandEncoder

@objcproperties MTLComputeCommandEncoder begin
    @autoproperty dispatchType::MTLDispatchType
end

@objcwrapper immutable = true availability = macos(v"15.0.0") MTLCommandQueueDescriptor <: NSObject

@objcproperties MTLCommandQueueDescriptor begin
    @autoproperty maxCommandBufferCount::UInt64 setter = setMaxCommandBufferCount
    @autoproperty logState::id{MTLLogState} setter = setLogState
end

const NSDeviceCertification = NSInteger

const NSProcessPerformanceProfile = NSInteger

@cenum MTLCompareFunction::UInt64 begin
    MTLCompareFunctionNever = 0x0000000000000000
    MTLCompareFunctionLess = 0x0000000000000001
    MTLCompareFunctionEqual = 0x0000000000000002
    MTLCompareFunctionLessEqual = 0x0000000000000003
    MTLCompareFunctionGreater = 0x0000000000000004
    MTLCompareFunctionNotEqual = 0x0000000000000005
    MTLCompareFunctionGreaterEqual = 0x0000000000000006
    MTLCompareFunctionAlways = 0x0000000000000007
end

@cenum MTLStencilOperation::UInt64 begin
    MTLStencilOperationKeep = 0x0000000000000000
    MTLStencilOperationZero = 0x0000000000000001
    MTLStencilOperationReplace = 0x0000000000000002
    MTLStencilOperationIncrementClamp = 0x0000000000000003
    MTLStencilOperationDecrementClamp = 0x0000000000000004
    MTLStencilOperationInvert = 0x0000000000000005
    MTLStencilOperationIncrementWrap = 0x0000000000000006
    MTLStencilOperationDecrementWrap = 0x0000000000000007
end

@objcwrapper immutable = true MTLStencilDescriptor <: NSObject

@objcproperties MTLStencilDescriptor begin
    @autoproperty stencilCompareFunction::MTLCompareFunction setter = setStencilCompareFunction
    @autoproperty stencilFailureOperation::MTLStencilOperation setter = setStencilFailureOperation
    @autoproperty depthFailureOperation::MTLStencilOperation setter = setDepthFailureOperation
    @autoproperty depthStencilPassOperation::MTLStencilOperation setter = setDepthStencilPassOperation
    @autoproperty readMask::UInt32 setter = setReadMask
    @autoproperty writeMask::UInt32 setter = setWriteMask
end

@objcwrapper immutable = true MTLDepthStencilDescriptor <: NSObject

@objcproperties MTLDepthStencilDescriptor begin
    @autoproperty depthCompareFunction::MTLCompareFunction setter = setDepthCompareFunction
    @autoproperty depthWriteEnabled::Bool getter = isDepthWriteEnabled setter = setDepthWriteEnabled
    @autoproperty frontFaceStencil::id{MTLStencilDescriptor} setter = setFrontFaceStencil
    @autoproperty backFaceStencil::id{MTLStencilDescriptor} setter = setBackFaceStencil
    @autoproperty label::id{NSString} setter = setLabel
end

@objcwrapper immutable = true MTLDepthStencilState <: NSObject

@objcproperties MTLDepthStencilState begin
    @autoproperty label::id{NSString}
    @autoproperty device::id{MTLDevice}
end

@objcwrapper immutable = true MTLDrawable <: NSObject

@objcproperties MTLDrawable begin
    @autoproperty presentedTime::Cdouble
    @autoproperty drawableID::UInt64
end

@cenum MTLVertexFormat::UInt64 begin
    MTLVertexFormatInvalid = 0x0000000000000000
    MTLVertexFormatUChar2 = 0x0000000000000001
    MTLVertexFormatUChar3 = 0x0000000000000002
    MTLVertexFormatUChar4 = 0x0000000000000003
    MTLVertexFormatChar2 = 0x0000000000000004
    MTLVertexFormatChar3 = 0x0000000000000005
    MTLVertexFormatChar4 = 0x0000000000000006
    MTLVertexFormatUChar2Normalized = 0x0000000000000007
    MTLVertexFormatUChar3Normalized = 0x0000000000000008
    MTLVertexFormatUChar4Normalized = 0x0000000000000009
    MTLVertexFormatChar2Normalized = 0x000000000000000a
    MTLVertexFormatChar3Normalized = 0x000000000000000b
    MTLVertexFormatChar4Normalized = 0x000000000000000c
    MTLVertexFormatUShort2 = 0x000000000000000d
    MTLVertexFormatUShort3 = 0x000000000000000e
    MTLVertexFormatUShort4 = 0x000000000000000f
    MTLVertexFormatShort2 = 0x0000000000000010
    MTLVertexFormatShort3 = 0x0000000000000011
    MTLVertexFormatShort4 = 0x0000000000000012
    MTLVertexFormatUShort2Normalized = 0x0000000000000013
    MTLVertexFormatUShort3Normalized = 0x0000000000000014
    MTLVertexFormatUShort4Normalized = 0x0000000000000015
    MTLVertexFormatShort2Normalized = 0x0000000000000016
    MTLVertexFormatShort3Normalized = 0x0000000000000017
    MTLVertexFormatShort4Normalized = 0x0000000000000018
    MTLVertexFormatHalf2 = 0x0000000000000019
    MTLVertexFormatHalf3 = 0x000000000000001a
    MTLVertexFormatHalf4 = 0x000000000000001b
    MTLVertexFormatFloat = 0x000000000000001c
    MTLVertexFormatFloat2 = 0x000000000000001d
    MTLVertexFormatFloat3 = 0x000000000000001e
    MTLVertexFormatFloat4 = 0x000000000000001f
    MTLVertexFormatInt = 0x0000000000000020
    MTLVertexFormatInt2 = 0x0000000000000021
    MTLVertexFormatInt3 = 0x0000000000000022
    MTLVertexFormatInt4 = 0x0000000000000023
    MTLVertexFormatUInt = 0x0000000000000024
    MTLVertexFormatUInt2 = 0x0000000000000025
    MTLVertexFormatUInt3 = 0x0000000000000026
    MTLVertexFormatUInt4 = 0x0000000000000027
    MTLVertexFormatInt1010102Normalized = 0x0000000000000028
    MTLVertexFormatUInt1010102Normalized = 0x0000000000000029
    MTLVertexFormatUChar4Normalized_BGRA = 0x000000000000002a
    MTLVertexFormatUChar = 0x000000000000002d
    MTLVertexFormatChar = 0x000000000000002e
    MTLVertexFormatUCharNormalized = 0x000000000000002f
    MTLVertexFormatCharNormalized = 0x0000000000000030
    MTLVertexFormatUShort = 0x0000000000000031
    MTLVertexFormatShort = 0x0000000000000032
    MTLVertexFormatUShortNormalized = 0x0000000000000033
    MTLVertexFormatShortNormalized = 0x0000000000000034
    MTLVertexFormatHalf = 0x0000000000000035
    MTLVertexFormatFloatRG11B10 = 0x0000000000000036
    MTLVertexFormatFloatRGB9E5 = 0x0000000000000037
end

@cenum MTLVertexStepFunction::UInt64 begin
    MTLVertexStepFunctionConstant = 0x0000000000000000
    MTLVertexStepFunctionPerVertex = 0x0000000000000001
    MTLVertexStepFunctionPerInstance = 0x0000000000000002
    MTLVertexStepFunctionPerPatch = 0x0000000000000003
    MTLVertexStepFunctionPerPatchControlPoint = 0x0000000000000004
end

@objcwrapper immutable = true MTLVertexBufferLayoutDescriptor <: NSObject

@objcproperties MTLVertexBufferLayoutDescriptor begin
    @autoproperty stride::UInt64 setter = setStride
    @autoproperty stepFunction::MTLVertexStepFunction setter = setStepFunction
    @autoproperty stepRate::UInt64 setter = setStepRate
end

@objcwrapper immutable = true MTLVertexBufferLayoutDescriptorArray <: NSObject

@objcwrapper immutable = true MTLVertexAttributeDescriptor <: NSObject

@objcproperties MTLVertexAttributeDescriptor begin
    @autoproperty format::MTLVertexFormat setter = setFormat
    @autoproperty offset::UInt64 setter = setOffset
    @autoproperty bufferIndex::UInt64 setter = setBufferIndex
end

@objcwrapper immutable = true MTLVertexAttributeDescriptorArray <: NSObject

@objcwrapper immutable = true MTLVertexDescriptor <: NSObject

@objcproperties MTLVertexDescriptor begin
    @autoproperty layouts::id{MTLVertexBufferLayoutDescriptorArray}
    @autoproperty attributes::id{MTLVertexAttributeDescriptorArray}
end

@cenum MTLAttributeFormat::UInt64 begin
    MTLAttributeFormatInvalid = 0x0000000000000000
    MTLAttributeFormatUChar2 = 0x0000000000000001
    MTLAttributeFormatUChar3 = 0x0000000000000002
    MTLAttributeFormatUChar4 = 0x0000000000000003
    MTLAttributeFormatChar2 = 0x0000000000000004
    MTLAttributeFormatChar3 = 0x0000000000000005
    MTLAttributeFormatChar4 = 0x0000000000000006
    MTLAttributeFormatUChar2Normalized = 0x0000000000000007
    MTLAttributeFormatUChar3Normalized = 0x0000000000000008
    MTLAttributeFormatUChar4Normalized = 0x0000000000000009
    MTLAttributeFormatChar2Normalized = 0x000000000000000a
    MTLAttributeFormatChar3Normalized = 0x000000000000000b
    MTLAttributeFormatChar4Normalized = 0x000000000000000c
    MTLAttributeFormatUShort2 = 0x000000000000000d
    MTLAttributeFormatUShort3 = 0x000000000000000e
    MTLAttributeFormatUShort4 = 0x000000000000000f
    MTLAttributeFormatShort2 = 0x0000000000000010
    MTLAttributeFormatShort3 = 0x0000000000000011
    MTLAttributeFormatShort4 = 0x0000000000000012
    MTLAttributeFormatUShort2Normalized = 0x0000000000000013
    MTLAttributeFormatUShort3Normalized = 0x0000000000000014
    MTLAttributeFormatUShort4Normalized = 0x0000000000000015
    MTLAttributeFormatShort2Normalized = 0x0000000000000016
    MTLAttributeFormatShort3Normalized = 0x0000000000000017
    MTLAttributeFormatShort4Normalized = 0x0000000000000018
    MTLAttributeFormatHalf2 = 0x0000000000000019
    MTLAttributeFormatHalf3 = 0x000000000000001a
    MTLAttributeFormatHalf4 = 0x000000000000001b
    MTLAttributeFormatFloat = 0x000000000000001c
    MTLAttributeFormatFloat2 = 0x000000000000001d
    MTLAttributeFormatFloat3 = 0x000000000000001e
    MTLAttributeFormatFloat4 = 0x000000000000001f
    MTLAttributeFormatInt = 0x0000000000000020
    MTLAttributeFormatInt2 = 0x0000000000000021
    MTLAttributeFormatInt3 = 0x0000000000000022
    MTLAttributeFormatInt4 = 0x0000000000000023
    MTLAttributeFormatUInt = 0x0000000000000024
    MTLAttributeFormatUInt2 = 0x0000000000000025
    MTLAttributeFormatUInt3 = 0x0000000000000026
    MTLAttributeFormatUInt4 = 0x0000000000000027
    MTLAttributeFormatInt1010102Normalized = 0x0000000000000028
    MTLAttributeFormatUInt1010102Normalized = 0x0000000000000029
    MTLAttributeFormatUChar4Normalized_BGRA = 0x000000000000002a
    MTLAttributeFormatUChar = 0x000000000000002d
    MTLAttributeFormatChar = 0x000000000000002e
    MTLAttributeFormatUCharNormalized = 0x000000000000002f
    MTLAttributeFormatCharNormalized = 0x0000000000000030
    MTLAttributeFormatUShort = 0x0000000000000031
    MTLAttributeFormatShort = 0x0000000000000032
    MTLAttributeFormatUShortNormalized = 0x0000000000000033
    MTLAttributeFormatShortNormalized = 0x0000000000000034
    MTLAttributeFormatHalf = 0x0000000000000035
    MTLAttributeFormatFloatRG11B10 = 0x0000000000000036
    MTLAttributeFormatFloatRGB9E5 = 0x0000000000000037
end

@cenum MTLIndexType::UInt64 begin
    MTLIndexTypeUInt16 = 0x0000000000000000
    MTLIndexTypeUInt32 = 0x0000000000000001
end

@cenum MTLStepFunction::UInt64 begin
    MTLStepFunctionConstant = 0x0000000000000000
    MTLStepFunctionPerVertex = 0x0000000000000001
    MTLStepFunctionPerInstance = 0x0000000000000002
    MTLStepFunctionPerPatch = 0x0000000000000003
    MTLStepFunctionPerPatchControlPoint = 0x0000000000000004
    MTLStepFunctionThreadPositionInGridX = 0x0000000000000005
    MTLStepFunctionThreadPositionInGridY = 0x0000000000000006
    MTLStepFunctionThreadPositionInGridXIndexed = 0x0000000000000007
    MTLStepFunctionThreadPositionInGridYIndexed = 0x0000000000000008
end

@objcwrapper immutable = true MTLBufferLayoutDescriptor <: NSObject

@objcproperties MTLBufferLayoutDescriptor begin
    @autoproperty stride::UInt64 setter = setStride
    @autoproperty stepFunction::MTLStepFunction setter = setStepFunction
    @autoproperty stepRate::UInt64 setter = setStepRate
end

@objcwrapper immutable = true MTLBufferLayoutDescriptorArray <: NSObject

@objcwrapper immutable = true MTLAttributeDescriptor <: NSObject

@objcproperties MTLAttributeDescriptor begin
    @autoproperty format::MTLAttributeFormat setter = setFormat
    @autoproperty offset::UInt64 setter = setOffset
    @autoproperty bufferIndex::UInt64 setter = setBufferIndex
end

@objcwrapper immutable = true MTLAttributeDescriptorArray <: NSObject

@objcwrapper immutable = true MTLStageInputOutputDescriptor <: NSObject

@objcproperties MTLStageInputOutputDescriptor begin
    @autoproperty layouts::id{MTLBufferLayoutDescriptorArray}
    @autoproperty attributes::id{MTLAttributeDescriptorArray}
    @autoproperty indexType::MTLIndexType setter = setIndexType
    @autoproperty indexBufferIndex::UInt64 setter = setIndexBufferIndex
end

@cenum MTLMutability::UInt64 begin
    MTLMutabilityDefault = 0x0000000000000000
    MTLMutabilityMutable = 0x0000000000000001
    MTLMutabilityImmutable = 0x0000000000000002
end

@cenum MTLShaderValidation::Int64 begin
    MTLShaderValidationDefault = 0
    MTLShaderValidationEnabled = 1
    MTLShaderValidationDisabled = 2
end

@objcwrapper immutable = true MTLPipelineBufferDescriptor <: NSObject

@objcproperties MTLPipelineBufferDescriptor begin
    @autoproperty mutability::MTLMutability setter = setMutability
end

@objcwrapper immutable = true MTLPipelineBufferDescriptorArray <: NSObject

@objcwrapper immutable = true MTLLinkedFunctions <: NSObject

@objcproperties MTLLinkedFunctions begin
    @autoproperty functions::id{NSArray} type = Vector{MTLFunction} setter = setFunctions
    @autoproperty binaryFunctions::id{NSArray} type = Vector{MTLFunction} setter = setBinaryFunctions
    @autoproperty groups::id{NSDictionary} setter = setGroups
    @autoproperty privateFunctions::id{NSArray} type = Vector{MTLFunction} setter = setPrivateFunctions
end

@objcwrapper immutable = true MTLComputePipelineReflection <: NSObject

@objcproperties MTLComputePipelineReflection begin
    @autoproperty bindings::id{NSArray} type = Vector{MTLBinding}
    @autoproperty arguments::id{NSArray} type = Vector{MTLArgument}
end

@objcwrapper immutable = false MTLComputePipelineDescriptor <: NSObject

@objcproperties MTLComputePipelineDescriptor begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty computeFunction::id{MTLFunction} setter = setComputeFunction
    @autoproperty threadGroupSizeIsMultipleOfThreadExecutionWidth::Bool setter = setThreadGroupSizeIsMultipleOfThreadExecutionWidth
    @autoproperty maxTotalThreadsPerThreadgroup::UInt64 setter = setMaxTotalThreadsPerThreadgroup
    @autoproperty stageInputDescriptor::id{MTLStageInputOutputDescriptor} setter = setStageInputDescriptor
    @autoproperty buffers::id{MTLPipelineBufferDescriptorArray}
    @autoproperty supportIndirectCommandBuffers::Bool setter = setSupportIndirectCommandBuffers
    @autoproperty insertLibraries::id{NSArray} type = Vector{MTLDynamicLibrary} setter = setInsertLibraries
    @autoproperty preloadedLibraries::id{NSArray} type = Vector{MTLDynamicLibrary} setter = setPreloadedLibraries
    @autoproperty binaryArchives::id{NSArray} type = Vector{MTLBinaryArchive} setter = setBinaryArchives
    @autoproperty linkedFunctions::id{MTLLinkedFunctions} setter = setLinkedFunctions
    @autoproperty supportAddingBinaryFunctions::Bool setter = setSupportAddingBinaryFunctions
    @autoproperty maxCallStackDepth::UInt64 setter = setMaxCallStackDepth
    @autoproperty shaderValidation::MTLShaderValidation setter = setShaderValidation availability = macos(v"15.0.0")
end

@objcwrapper immutable = false MTLComputePipelineState <: NSObject

@objcproperties MTLComputePipelineState begin
    @autoproperty label::id{NSString}
    @autoproperty device::id{MTLDevice}
    @autoproperty maxTotalThreadsPerThreadgroup::UInt64
    @autoproperty threadExecutionWidth::UInt64
    @autoproperty staticThreadgroupMemoryLength::UInt64
    @autoproperty supportIndirectCommandBuffers::Bool
    @autoproperty gpuResourceID::MTLResourceID
    @autoproperty shaderValidation::MTLShaderValidation availability = macos(v"15.0.0")
end

@cenum MTLPrimitiveType::UInt64 begin
    MTLPrimitiveTypePoint = 0x0000000000000000
    MTLPrimitiveTypeLine = 0x0000000000000001
    MTLPrimitiveTypeLineStrip = 0x0000000000000002
    MTLPrimitiveTypeTriangle = 0x0000000000000003
    MTLPrimitiveTypeTriangleStrip = 0x0000000000000004
end

@cenum MTLVisibilityResultMode::UInt64 begin
    MTLVisibilityResultModeDisabled = 0x0000000000000000
    MTLVisibilityResultModeBoolean = 0x0000000000000001
    MTLVisibilityResultModeCounting = 0x0000000000000002
end

struct MTLScissorRect
    x::NSUInteger
    y::NSUInteger
    width::NSUInteger
    height::NSUInteger
end

struct MTLViewport
    originX::Cdouble
    originY::Cdouble
    width::Cdouble
    height::Cdouble
    znear::Cdouble
    zfar::Cdouble
end

@cenum MTLCullMode::UInt64 begin
    MTLCullModeNone = 0x0000000000000000
    MTLCullModeFront = 0x0000000000000001
    MTLCullModeBack = 0x0000000000000002
end

@cenum MTLWinding::UInt64 begin
    MTLWindingClockwise = 0x0000000000000000
    MTLWindingCounterClockwise = 0x0000000000000001
end

@cenum MTLDepthClipMode::UInt64 begin
    MTLDepthClipModeClip = 0x0000000000000000
    MTLDepthClipModeClamp = 0x0000000000000001
end

@cenum MTLTriangleFillMode::UInt64 begin
    MTLTriangleFillModeFill = 0x0000000000000000
    MTLTriangleFillModeLines = 0x0000000000000001
end

struct MTLDrawPrimitivesIndirectArguments
    vertexCount::UInt32
    instanceCount::UInt32
    vertexStart::UInt32
    baseInstance::UInt32
end

struct MTLDrawIndexedPrimitivesIndirectArguments
    indexCount::UInt32
    instanceCount::UInt32
    indexStart::UInt32
    baseVertex::Int32
    baseInstance::UInt32
end

struct MTLVertexAmplificationViewMapping
    viewportArrayIndexOffset::UInt32
    renderTargetArrayIndexOffset::UInt32
end

struct MTLDrawPatchIndirectArguments
    patchCount::UInt32
    instanceCount::UInt32
    patchStart::UInt32
    baseInstance::UInt32
end

struct MTLQuadTessellationFactorsHalf
    edgeTessellationFactor::NTuple{4, UInt16}
    insideTessellationFactor::NTuple{2, UInt16}
end

struct MTLTriangleTessellationFactorsHalf
    edgeTessellationFactor::NTuple{3, UInt16}
    insideTessellationFactor::UInt16
end

@cenum MTLRenderStages::UInt64 begin
    MTLRenderStageVertex = 0x0000000000000001
    MTLRenderStageFragment = 0x0000000000000002
    MTLRenderStageTile = 0x0000000000000004
    MTLRenderStageObject = 0x0000000000000008
    MTLRenderStageMesh = 0x0000000000000010
end

@objcwrapper immutable = true MTLRenderCommandEncoder <: MTLCommandEncoder

@objcproperties MTLRenderCommandEncoder begin
    @autoproperty tileWidth::UInt64
    @autoproperty tileHeight::UInt64
end

@objcwrapper immutable = true MTLFunctionHandle <: NSObject

@objcproperties MTLFunctionHandle begin
    @autoproperty functionType::MTLFunctionType
    @autoproperty name::id{NSString}
    @autoproperty device::id{MTLDevice}
end

@objcwrapper immutable = true MTLVisibleFunctionTableDescriptor <: NSObject

@objcproperties MTLVisibleFunctionTableDescriptor begin
    @autoproperty functionCount::UInt64 setter = setFunctionCount
end

@objcwrapper immutable = true MTLVisibleFunctionTable <: MTLResource

@objcproperties MTLVisibleFunctionTable begin
    @autoproperty gpuResourceID::MTLResourceID
end

@cenum MTLBlendFactor::UInt64 begin
    MTLBlendFactorZero = 0x0000000000000000
    MTLBlendFactorOne = 0x0000000000000001
    MTLBlendFactorSourceColor = 0x0000000000000002
    MTLBlendFactorOneMinusSourceColor = 0x0000000000000003
    MTLBlendFactorSourceAlpha = 0x0000000000000004
    MTLBlendFactorOneMinusSourceAlpha = 0x0000000000000005
    MTLBlendFactorDestinationColor = 0x0000000000000006
    MTLBlendFactorOneMinusDestinationColor = 0x0000000000000007
    MTLBlendFactorDestinationAlpha = 0x0000000000000008
    MTLBlendFactorOneMinusDestinationAlpha = 0x0000000000000009
    MTLBlendFactorSourceAlphaSaturated = 0x000000000000000a
    MTLBlendFactorBlendColor = 0x000000000000000b
    MTLBlendFactorOneMinusBlendColor = 0x000000000000000c
    MTLBlendFactorBlendAlpha = 0x000000000000000d
    MTLBlendFactorOneMinusBlendAlpha = 0x000000000000000e
    MTLBlendFactorSource1Color = 0x000000000000000f
    MTLBlendFactorOneMinusSource1Color = 0x0000000000000010
    MTLBlendFactorSource1Alpha = 0x0000000000000011
    MTLBlendFactorOneMinusSource1Alpha = 0x0000000000000012
end

@cenum MTLBlendOperation::UInt64 begin
    MTLBlendOperationAdd = 0x0000000000000000
    MTLBlendOperationSubtract = 0x0000000000000001
    MTLBlendOperationReverseSubtract = 0x0000000000000002
    MTLBlendOperationMin = 0x0000000000000003
    MTLBlendOperationMax = 0x0000000000000004
end

@cenum MTLColorWriteMask::UInt64 begin
    MTLColorWriteMaskNone = 0x0000000000000000
    MTLColorWriteMaskRed = 0x0000000000000008
    MTLColorWriteMaskGreen = 0x0000000000000004
    MTLColorWriteMaskBlue = 0x0000000000000002
    MTLColorWriteMaskAlpha = 0x0000000000000001
    MTLColorWriteMaskAll = 0x000000000000000f
end

@cenum MTLPrimitiveTopologyClass::UInt64 begin
    MTLPrimitiveTopologyClassUnspecified = 0x0000000000000000
    MTLPrimitiveTopologyClassPoint = 0x0000000000000001
    MTLPrimitiveTopologyClassLine = 0x0000000000000002
    MTLPrimitiveTopologyClassTriangle = 0x0000000000000003
end

@cenum MTLTessellationPartitionMode::UInt64 begin
    MTLTessellationPartitionModePow2 = 0x0000000000000000
    MTLTessellationPartitionModeInteger = 0x0000000000000001
    MTLTessellationPartitionModeFractionalOdd = 0x0000000000000002
    MTLTessellationPartitionModeFractionalEven = 0x0000000000000003
end

@cenum MTLTessellationFactorStepFunction::UInt64 begin
    MTLTessellationFactorStepFunctionConstant = 0x0000000000000000
    MTLTessellationFactorStepFunctionPerPatch = 0x0000000000000001
    MTLTessellationFactorStepFunctionPerInstance = 0x0000000000000002
    MTLTessellationFactorStepFunctionPerPatchAndPerInstance = 0x0000000000000003
end

@cenum MTLTessellationFactorFormat::UInt64 begin
    MTLTessellationFactorFormatHalf = 0x0000000000000000
end

@cenum MTLTessellationControlPointIndexType::UInt64 begin
    MTLTessellationControlPointIndexTypeNone = 0x0000000000000000
    MTLTessellationControlPointIndexTypeUInt16 = 0x0000000000000001
    MTLTessellationControlPointIndexTypeUInt32 = 0x0000000000000002
end

@objcwrapper immutable = true MTLRenderPipelineColorAttachmentDescriptor <: NSObject

@objcproperties MTLRenderPipelineColorAttachmentDescriptor begin
    @autoproperty pixelFormat::MTLPixelFormat setter = setPixelFormat
    @autoproperty blendingEnabled::Bool getter = isBlendingEnabled setter = setBlendingEnabled
    @autoproperty sourceRGBBlendFactor::MTLBlendFactor setter = setSourceRGBBlendFactor
    @autoproperty destinationRGBBlendFactor::MTLBlendFactor setter = setDestinationRGBBlendFactor
    @autoproperty rgbBlendOperation::MTLBlendOperation setter = setRgbBlendOperation
    @autoproperty sourceAlphaBlendFactor::MTLBlendFactor setter = setSourceAlphaBlendFactor
    @autoproperty destinationAlphaBlendFactor::MTLBlendFactor setter = setDestinationAlphaBlendFactor
    @autoproperty alphaBlendOperation::MTLBlendOperation setter = setAlphaBlendOperation
    @autoproperty writeMask::MTLColorWriteMask setter = setWriteMask
end

@objcwrapper immutable = true MTLRenderPipelineReflection <: NSObject

@objcproperties MTLRenderPipelineReflection begin
    @autoproperty vertexBindings::id{NSArray} type = Vector{MTLBinding}
    @autoproperty fragmentBindings::id{NSArray} type = Vector{MTLBinding}
    @autoproperty tileBindings::id{NSArray} type = Vector{MTLBinding}
    @autoproperty objectBindings::id{NSArray} type = Vector{MTLBinding}
    @autoproperty meshBindings::id{NSArray} type = Vector{MTLBinding}
    @autoproperty vertexArguments::id{NSArray} type = Vector{MTLArgument}
    @autoproperty fragmentArguments::id{NSArray} type = Vector{MTLArgument}
    @autoproperty tileArguments::id{NSArray} type = Vector{MTLArgument}
end

@objcwrapper immutable = true MTLRenderPipelineColorAttachmentDescriptorArray <: NSObject

@objcwrapper immutable = true MTLRenderPipelineDescriptor <: NSObject

@objcproperties MTLRenderPipelineDescriptor begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty vertexFunction::id{MTLFunction} setter = setVertexFunction
    @autoproperty fragmentFunction::id{MTLFunction} setter = setFragmentFunction
    @autoproperty vertexDescriptor::id{MTLVertexDescriptor} setter = setVertexDescriptor
    @autoproperty sampleCount::UInt64 setter = setSampleCount
    @autoproperty rasterSampleCount::UInt64 setter = setRasterSampleCount
    @autoproperty alphaToCoverageEnabled::Bool getter = isAlphaToCoverageEnabled setter = setAlphaToCoverageEnabled
    @autoproperty alphaToOneEnabled::Bool getter = isAlphaToOneEnabled setter = setAlphaToOneEnabled
    @autoproperty rasterizationEnabled::Bool getter = isRasterizationEnabled setter = setRasterizationEnabled
    @autoproperty maxVertexAmplificationCount::UInt64 setter = setMaxVertexAmplificationCount
    @autoproperty colorAttachments::id{MTLRenderPipelineColorAttachmentDescriptorArray}
    @autoproperty depthAttachmentPixelFormat::MTLPixelFormat setter = setDepthAttachmentPixelFormat
    @autoproperty stencilAttachmentPixelFormat::MTLPixelFormat setter = setStencilAttachmentPixelFormat
    @autoproperty inputPrimitiveTopology::MTLPrimitiveTopologyClass setter = setInputPrimitiveTopology
    @autoproperty tessellationPartitionMode::MTLTessellationPartitionMode setter = setTessellationPartitionMode
    @autoproperty maxTessellationFactor::UInt64 setter = setMaxTessellationFactor
    @autoproperty tessellationFactorScaleEnabled::Bool getter = isTessellationFactorScaleEnabled setter = setTessellationFactorScaleEnabled
    @autoproperty tessellationFactorFormat::MTLTessellationFactorFormat setter = setTessellationFactorFormat
    @autoproperty tessellationControlPointIndexType::MTLTessellationControlPointIndexType setter = setTessellationControlPointIndexType
    @autoproperty tessellationFactorStepFunction::MTLTessellationFactorStepFunction setter = setTessellationFactorStepFunction
    @autoproperty tessellationOutputWindingOrder::MTLWinding setter = setTessellationOutputWindingOrder
    @autoproperty vertexBuffers::id{MTLPipelineBufferDescriptorArray}
    @autoproperty fragmentBuffers::id{MTLPipelineBufferDescriptorArray}
    @autoproperty supportIndirectCommandBuffers::Bool setter = setSupportIndirectCommandBuffers
    @autoproperty binaryArchives::id{NSArray} type = Vector{MTLBinaryArchive} setter = setBinaryArchives
    @autoproperty vertexPreloadedLibraries::id{NSArray} type = Vector{MTLDynamicLibrary} setter = setVertexPreloadedLibraries
    @autoproperty fragmentPreloadedLibraries::id{NSArray} type = Vector{MTLDynamicLibrary} setter = setFragmentPreloadedLibraries
    @autoproperty vertexLinkedFunctions::id{MTLLinkedFunctions} setter = setVertexLinkedFunctions
    @autoproperty fragmentLinkedFunctions::id{MTLLinkedFunctions} setter = setFragmentLinkedFunctions
    @autoproperty supportAddingVertexBinaryFunctions::Bool setter = setSupportAddingVertexBinaryFunctions
    @autoproperty supportAddingFragmentBinaryFunctions::Bool setter = setSupportAddingFragmentBinaryFunctions
    @autoproperty maxVertexCallStackDepth::UInt64 setter = setMaxVertexCallStackDepth
    @autoproperty maxFragmentCallStackDepth::UInt64 setter = setMaxFragmentCallStackDepth
    @autoproperty shaderValidation::MTLShaderValidation setter = setShaderValidation availability = macos(v"15.0.0")
end

@objcwrapper immutable = true MTLRenderPipelineFunctionsDescriptor <: NSObject

@objcproperties MTLRenderPipelineFunctionsDescriptor begin
    @autoproperty vertexAdditionalBinaryFunctions::id{NSArray} type = Vector{MTLFunction} setter = setVertexAdditionalBinaryFunctions
    @autoproperty fragmentAdditionalBinaryFunctions::id{NSArray} type = Vector{MTLFunction} setter = setFragmentAdditionalBinaryFunctions
    @autoproperty tileAdditionalBinaryFunctions::id{NSArray} type = Vector{MTLFunction} setter = setTileAdditionalBinaryFunctions
end

@objcwrapper immutable = true MTLRenderPipelineState <: NSObject

@objcproperties MTLRenderPipelineState begin
    @autoproperty label::id{NSString}
    @autoproperty device::id{MTLDevice}
    @autoproperty maxTotalThreadsPerThreadgroup::UInt64
    @autoproperty threadgroupSizeMatchesTileSize::Bool
    @autoproperty imageblockSampleLength::UInt64
    @autoproperty supportIndirectCommandBuffers::Bool
    @autoproperty maxTotalThreadsPerObjectThreadgroup::UInt64
    @autoproperty maxTotalThreadsPerMeshThreadgroup::UInt64
    @autoproperty objectThreadExecutionWidth::UInt64
    @autoproperty meshThreadExecutionWidth::UInt64
    @autoproperty maxTotalThreadgroupsPerMeshGrid::UInt64
    @autoproperty gpuResourceID::MTLResourceID
    @autoproperty shaderValidation::MTLShaderValidation availability = macos(v"15.0.0")
end

@objcwrapper immutable = true MTLTileRenderPipelineColorAttachmentDescriptor <: NSObject

@objcproperties MTLTileRenderPipelineColorAttachmentDescriptor begin
    @autoproperty pixelFormat::MTLPixelFormat setter = setPixelFormat
end

@objcwrapper immutable = true MTLTileRenderPipelineColorAttachmentDescriptorArray <: NSObject

@objcwrapper immutable = true MTLTileRenderPipelineDescriptor <: NSObject

@objcproperties MTLTileRenderPipelineDescriptor begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty tileFunction::id{MTLFunction} setter = setTileFunction
    @autoproperty rasterSampleCount::UInt64 setter = setRasterSampleCount
    @autoproperty colorAttachments::id{MTLTileRenderPipelineColorAttachmentDescriptorArray}
    @autoproperty threadgroupSizeMatchesTileSize::Bool setter = setThreadgroupSizeMatchesTileSize
    @autoproperty tileBuffers::id{MTLPipelineBufferDescriptorArray}
    @autoproperty maxTotalThreadsPerThreadgroup::UInt64 setter = setMaxTotalThreadsPerThreadgroup
    @autoproperty binaryArchives::id{NSArray} type = Vector{MTLBinaryArchive} setter = setBinaryArchives
    @autoproperty preloadedLibraries::id{NSArray} type = Vector{MTLDynamicLibrary} setter = setPreloadedLibraries
    @autoproperty linkedFunctions::id{MTLLinkedFunctions} setter = setLinkedFunctions
    @autoproperty supportAddingBinaryFunctions::Bool setter = setSupportAddingBinaryFunctions
    @autoproperty maxCallStackDepth::UInt64 setter = setMaxCallStackDepth
    @autoproperty shaderValidation::MTLShaderValidation setter = setShaderValidation availability = macos(v"15.0.0")
end

@objcwrapper immutable = true MTLMeshRenderPipelineDescriptor <: NSObject

@objcproperties MTLMeshRenderPipelineDescriptor begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty objectFunction::id{MTLFunction} setter = setObjectFunction
    @autoproperty meshFunction::id{MTLFunction} setter = setMeshFunction
    @autoproperty fragmentFunction::id{MTLFunction} setter = setFragmentFunction
    @autoproperty maxTotalThreadsPerObjectThreadgroup::UInt64 setter = setMaxTotalThreadsPerObjectThreadgroup
    @autoproperty maxTotalThreadsPerMeshThreadgroup::UInt64 setter = setMaxTotalThreadsPerMeshThreadgroup
    @autoproperty objectThreadgroupSizeIsMultipleOfThreadExecutionWidth::Bool setter = setObjectThreadgroupSizeIsMultipleOfThreadExecutionWidth
    @autoproperty meshThreadgroupSizeIsMultipleOfThreadExecutionWidth::Bool setter = setMeshThreadgroupSizeIsMultipleOfThreadExecutionWidth
    @autoproperty payloadMemoryLength::UInt64 setter = setPayloadMemoryLength
    @autoproperty maxTotalThreadgroupsPerMeshGrid::UInt64 setter = setMaxTotalThreadgroupsPerMeshGrid
    @autoproperty objectBuffers::id{MTLPipelineBufferDescriptorArray}
    @autoproperty meshBuffers::id{MTLPipelineBufferDescriptorArray}
    @autoproperty fragmentBuffers::id{MTLPipelineBufferDescriptorArray}
    @autoproperty rasterSampleCount::UInt64 setter = setRasterSampleCount
    @autoproperty alphaToCoverageEnabled::Bool getter = isAlphaToCoverageEnabled setter = setAlphaToCoverageEnabled
    @autoproperty alphaToOneEnabled::Bool getter = isAlphaToOneEnabled setter = setAlphaToOneEnabled
    @autoproperty rasterizationEnabled::Bool getter = isRasterizationEnabled setter = setRasterizationEnabled
    @autoproperty maxVertexAmplificationCount::UInt64 setter = setMaxVertexAmplificationCount
    @autoproperty colorAttachments::id{MTLRenderPipelineColorAttachmentDescriptorArray}
    @autoproperty depthAttachmentPixelFormat::MTLPixelFormat setter = setDepthAttachmentPixelFormat
    @autoproperty stencilAttachmentPixelFormat::MTLPixelFormat setter = setStencilAttachmentPixelFormat
    @autoproperty supportIndirectCommandBuffers::Bool setter = setSupportIndirectCommandBuffers availability = macos(v"14.0.0")
    @autoproperty binaryArchives::id{NSArray} type = Vector{MTLBinaryArchive} setter = setBinaryArchives availability = macos(v"15.0.0")
    @autoproperty objectLinkedFunctions::id{MTLLinkedFunctions} setter = setObjectLinkedFunctions availability = macos(v"14.0.0")
    @autoproperty meshLinkedFunctions::id{MTLLinkedFunctions} setter = setMeshLinkedFunctions availability = macos(v"14.0.0")
    @autoproperty fragmentLinkedFunctions::id{MTLLinkedFunctions} setter = setFragmentLinkedFunctions availability = macos(v"14.0.0")
    @autoproperty shaderValidation::MTLShaderValidation setter = setShaderValidation availability = macos(v"15.0.0")
end

@objcwrapper immutable = true MTLParallelRenderCommandEncoder <: MTLCommandEncoder

@cenum MTLSamplerMinMagFilter::UInt64 begin
    MTLSamplerMinMagFilterNearest = 0x0000000000000000
    MTLSamplerMinMagFilterLinear = 0x0000000000000001
end

@cenum MTLSamplerMipFilter::UInt64 begin
    MTLSamplerMipFilterNotMipmapped = 0x0000000000000000
    MTLSamplerMipFilterNearest = 0x0000000000000001
    MTLSamplerMipFilterLinear = 0x0000000000000002
end

@cenum MTLSamplerAddressMode::UInt64 begin
    MTLSamplerAddressModeClampToEdge = 0x0000000000000000
    MTLSamplerAddressModeMirrorClampToEdge = 0x0000000000000001
    MTLSamplerAddressModeRepeat = 0x0000000000000002
    MTLSamplerAddressModeMirrorRepeat = 0x0000000000000003
    MTLSamplerAddressModeClampToZero = 0x0000000000000004
    MTLSamplerAddressModeClampToBorderColor = 0x0000000000000005
end

@cenum MTLSamplerBorderColor::UInt64 begin
    MTLSamplerBorderColorTransparentBlack = 0x0000000000000000
    MTLSamplerBorderColorOpaqueBlack = 0x0000000000000001
    MTLSamplerBorderColorOpaqueWhite = 0x0000000000000002
end

@objcwrapper immutable = true MTLSamplerDescriptor <: NSObject

@objcproperties MTLSamplerDescriptor begin
    @autoproperty minFilter::MTLSamplerMinMagFilter setter = setMinFilter
    @autoproperty magFilter::MTLSamplerMinMagFilter setter = setMagFilter
    @autoproperty mipFilter::MTLSamplerMipFilter setter = setMipFilter
    @autoproperty maxAnisotropy::UInt64 setter = setMaxAnisotropy
    @autoproperty sAddressMode::MTLSamplerAddressMode setter = setSAddressMode
    @autoproperty tAddressMode::MTLSamplerAddressMode setter = setTAddressMode
    @autoproperty rAddressMode::MTLSamplerAddressMode setter = setRAddressMode
    @autoproperty borderColor::MTLSamplerBorderColor setter = setBorderColor
    @autoproperty normalizedCoordinates::Bool setter = setNormalizedCoordinates
    @autoproperty lodMinClamp::Cfloat setter = setLodMinClamp
    @autoproperty lodMaxClamp::Cfloat setter = setLodMaxClamp
    @autoproperty lodAverage::Bool setter = setLodAverage
    @autoproperty compareFunction::MTLCompareFunction setter = setCompareFunction
    @autoproperty supportArgumentBuffers::Bool setter = setSupportArgumentBuffers
    @autoproperty label::id{NSString} setter = setLabel
end

@objcwrapper immutable = true MTLSamplerState <: NSObject

@objcproperties MTLSamplerState begin
    @autoproperty label::id{NSString}
    @autoproperty device::id{MTLDevice}
    @autoproperty gpuResourceID::MTLResourceID
end

struct _MTLPackedFloat3
    data::NTuple{12, UInt8}
end

function Base.getproperty(x::Ptr{_MTLPackedFloat3}, f::Symbol)
    f === :x && return Ptr{Cfloat}(x + 0)
    f === :y && return Ptr{Cfloat}(x + 4)
    f === :z && return Ptr{Cfloat}(x + 8)
    f === :elements && return Ptr{NTuple{3, Cfloat}}(x + 0)
    return getfield(x, f)
end

function Base.getproperty(x::_MTLPackedFloat3, f::Symbol)
    r = Ref{_MTLPackedFloat3}(x)
    ptr = Base.unsafe_convert(Ptr{_MTLPackedFloat3}, r)
    fptr = getproperty(ptr, f)
    return GC.@preserve r unsafe_load(fptr)
end

function Base.setproperty!(x::Ptr{_MTLPackedFloat3}, f::Symbol, v)
    return unsafe_store!(getproperty(x, f), v)
end

const MTLPackedFloat3 = _MTLPackedFloat3

function MTLPackedFloat3Make(x, y, z)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLPackedFloat3Make(x::Cfloat, y::Cfloat, z::Cfloat)::MTLPackedFloat3
end

struct MTLPackedFloatQuaternion
    x::Cfloat
    y::Cfloat
    z::Cfloat
    w::Cfloat
end

function MTLPackedFloatQuaternionMake(x, y, z, w)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLPackedFloatQuaternionMake(x::Cfloat, y::Cfloat, z::Cfloat, w::Cfloat)::MTLPackedFloatQuaternion
end

struct _MTLPackedFloat4x3
    columns::NTuple{4, MTLPackedFloat3}
end

const MTLPackedFloat4x3 = _MTLPackedFloat4x3

struct _MTLAxisAlignedBoundingBox
    min::MTLPackedFloat3
    max::MTLPackedFloat3
end

const MTLAxisAlignedBoundingBox = _MTLAxisAlignedBoundingBox

struct MTLComponentTransform
    scale::MTLPackedFloat3
    shear::MTLPackedFloat3
    pivot::MTLPackedFloat3
    rotation::MTLPackedFloatQuaternion
    translation::MTLPackedFloat3
end

@cenum MTLAccelerationStructureUsage::UInt64 begin
    MTLAccelerationStructureUsageNone = 0x0000000000000000
    MTLAccelerationStructureUsageRefit = 0x0000000000000001
    MTLAccelerationStructureUsagePreferFastBuild = 0x0000000000000002
    MTLAccelerationStructureUsageExtendedLimits = 0x0000000000000004
end

@cenum MTLAccelerationStructureInstanceOptions::UInt32 begin
    MTLAccelerationStructureInstanceOptionNone = 0x0000000000000000
    MTLAccelerationStructureInstanceOptionDisableTriangleCulling = 0x0000000000000001
    MTLAccelerationStructureInstanceOptionTriangleFrontFacingWindingCounterClockwise = 0x0000000000000002
    MTLAccelerationStructureInstanceOptionOpaque = 0x0000000000000004
    MTLAccelerationStructureInstanceOptionNonOpaque = 0x0000000000000008
end

@cenum MTLMatrixLayout::Int64 begin
    MTLMatrixLayoutColumnMajor = 0
    MTLMatrixLayoutRowMajor = 1
end

@objcwrapper immutable = true MTLAccelerationStructureDescriptor <: NSObject

@objcproperties MTLAccelerationStructureDescriptor begin
    @autoproperty usage::MTLAccelerationStructureUsage setter = setUsage
end

@objcwrapper immutable = true MTLAccelerationStructureGeometryDescriptor <: NSObject

@objcproperties MTLAccelerationStructureGeometryDescriptor begin
    @autoproperty intersectionFunctionTableOffset::UInt64 setter = setIntersectionFunctionTableOffset
    @autoproperty opaque::Bool setter = setOpaque
    @autoproperty allowDuplicateIntersectionFunctionInvocation::Bool setter = setAllowDuplicateIntersectionFunctionInvocation
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty primitiveDataBuffer::id{MTLBuffer} setter = setPrimitiveDataBuffer
    @autoproperty primitiveDataBufferOffset::UInt64 setter = setPrimitiveDataBufferOffset
    @autoproperty primitiveDataStride::UInt64 setter = setPrimitiveDataStride
    @autoproperty primitiveDataElementSize::UInt64 setter = setPrimitiveDataElementSize
end

@cenum MTLMotionBorderMode::UInt32 begin
    MTLMotionBorderModeClamp = 0x0000000000000000
    MTLMotionBorderModeVanish = 0x0000000000000001
end

@objcwrapper immutable = true MTLPrimitiveAccelerationStructureDescriptor <: MTLAccelerationStructureDescriptor

@objcproperties MTLPrimitiveAccelerationStructureDescriptor begin
    @autoproperty geometryDescriptors::id{NSArray} type = Vector{MTLAccelerationStructureGeometryDescriptor} setter = setGeometryDescriptors
    @autoproperty motionStartBorderMode::MTLMotionBorderMode setter = setMotionStartBorderMode
    @autoproperty motionEndBorderMode::MTLMotionBorderMode setter = setMotionEndBorderMode
    @autoproperty motionStartTime::Cfloat setter = setMotionStartTime
    @autoproperty motionEndTime::Cfloat setter = setMotionEndTime
    @autoproperty motionKeyframeCount::UInt64 setter = setMotionKeyframeCount
end

@objcwrapper immutable = true MTLAccelerationStructureTriangleGeometryDescriptor <: MTLAccelerationStructureGeometryDescriptor

@objcproperties MTLAccelerationStructureTriangleGeometryDescriptor begin
    @autoproperty vertexBuffer::id{MTLBuffer} setter = setVertexBuffer
    @autoproperty vertexBufferOffset::UInt64 setter = setVertexBufferOffset
    @autoproperty vertexFormat::MTLAttributeFormat setter = setVertexFormat
    @autoproperty vertexStride::UInt64 setter = setVertexStride
    @autoproperty indexBuffer::id{MTLBuffer} setter = setIndexBuffer
    @autoproperty indexBufferOffset::UInt64 setter = setIndexBufferOffset
    @autoproperty indexType::MTLIndexType setter = setIndexType
    @autoproperty triangleCount::UInt64 setter = setTriangleCount
    @autoproperty transformationMatrixBuffer::id{MTLBuffer} setter = setTransformationMatrixBuffer
    @autoproperty transformationMatrixBufferOffset::UInt64 setter = setTransformationMatrixBufferOffset
    @autoproperty transformationMatrixLayout::MTLMatrixLayout setter = setTransformationMatrixLayout availability = macos(v"15.0.0")
end

@objcwrapper immutable = true MTLAccelerationStructureBoundingBoxGeometryDescriptor <: MTLAccelerationStructureGeometryDescriptor

@objcproperties MTLAccelerationStructureBoundingBoxGeometryDescriptor begin
    @autoproperty boundingBoxBuffer::id{MTLBuffer} setter = setBoundingBoxBuffer
    @autoproperty boundingBoxBufferOffset::UInt64 setter = setBoundingBoxBufferOffset
    @autoproperty boundingBoxStride::UInt64 setter = setBoundingBoxStride
    @autoproperty boundingBoxCount::UInt64 setter = setBoundingBoxCount
end

@objcwrapper immutable = true MTLMotionKeyframeData <: NSObject

@objcproperties MTLMotionKeyframeData begin
    @autoproperty buffer::id{MTLBuffer} setter = setBuffer
    @autoproperty offset::UInt64 setter = setOffset
end

@objcwrapper immutable = true MTLAccelerationStructureMotionTriangleGeometryDescriptor <: MTLAccelerationStructureGeometryDescriptor

@objcproperties MTLAccelerationStructureMotionTriangleGeometryDescriptor begin
    @autoproperty vertexBuffers::id{NSArray} type = Vector{MTLMotionKeyframeData} setter = setVertexBuffers
    @autoproperty vertexFormat::MTLAttributeFormat setter = setVertexFormat
    @autoproperty vertexStride::UInt64 setter = setVertexStride
    @autoproperty indexBuffer::id{MTLBuffer} setter = setIndexBuffer
    @autoproperty indexBufferOffset::UInt64 setter = setIndexBufferOffset
    @autoproperty indexType::MTLIndexType setter = setIndexType
    @autoproperty triangleCount::UInt64 setter = setTriangleCount
    @autoproperty transformationMatrixBuffer::id{MTLBuffer} setter = setTransformationMatrixBuffer
    @autoproperty transformationMatrixBufferOffset::UInt64 setter = setTransformationMatrixBufferOffset
    @autoproperty transformationMatrixLayout::MTLMatrixLayout setter = setTransformationMatrixLayout availability = macos(v"15.0.0")
end

@objcwrapper immutable = true MTLAccelerationStructureMotionBoundingBoxGeometryDescriptor <: MTLAccelerationStructureGeometryDescriptor

@objcproperties MTLAccelerationStructureMotionBoundingBoxGeometryDescriptor begin
    @autoproperty boundingBoxBuffers::id{NSArray} type = Vector{MTLMotionKeyframeData} setter = setBoundingBoxBuffers
    @autoproperty boundingBoxStride::UInt64 setter = setBoundingBoxStride
    @autoproperty boundingBoxCount::UInt64 setter = setBoundingBoxCount
end

@cenum MTLCurveType::Int64 begin
    MTLCurveTypeRound = 0
    MTLCurveTypeFlat = 1
end

@cenum MTLCurveBasis::Int64 begin
    MTLCurveBasisBSpline = 0
    MTLCurveBasisCatmullRom = 1
    MTLCurveBasisLinear = 2
    MTLCurveBasisBezier = 3
end

@cenum MTLCurveEndCaps::Int64 begin
    MTLCurveEndCapsNone = 0
    MTLCurveEndCapsDisk = 1
    MTLCurveEndCapsSphere = 2
end

@objcwrapper immutable = true availability = macos(v"14.0.0") MTLAccelerationStructureCurveGeometryDescriptor <: MTLAccelerationStructureGeometryDescriptor

@objcproperties MTLAccelerationStructureCurveGeometryDescriptor begin
    @autoproperty controlPointBuffer::id{MTLBuffer} setter = setControlPointBuffer
    @autoproperty controlPointBufferOffset::UInt64 setter = setControlPointBufferOffset
    @autoproperty controlPointCount::UInt64 setter = setControlPointCount
    @autoproperty controlPointStride::UInt64 setter = setControlPointStride
    @autoproperty controlPointFormat::MTLAttributeFormat setter = setControlPointFormat
    @autoproperty radiusBuffer::id{MTLBuffer} setter = setRadiusBuffer
    @autoproperty radiusBufferOffset::UInt64 setter = setRadiusBufferOffset
    @autoproperty radiusFormat::MTLAttributeFormat setter = setRadiusFormat
    @autoproperty radiusStride::UInt64 setter = setRadiusStride
    @autoproperty indexBuffer::id{MTLBuffer} setter = setIndexBuffer
    @autoproperty indexBufferOffset::UInt64 setter = setIndexBufferOffset
    @autoproperty indexType::MTLIndexType setter = setIndexType
    @autoproperty segmentCount::UInt64 setter = setSegmentCount
    @autoproperty segmentControlPointCount::UInt64 setter = setSegmentControlPointCount
    @autoproperty curveType::MTLCurveType setter = setCurveType
    @autoproperty curveBasis::MTLCurveBasis setter = setCurveBasis
    @autoproperty curveEndCaps::MTLCurveEndCaps setter = setCurveEndCaps
end

@objcwrapper immutable = true availability = macos(v"14.0.0") MTLAccelerationStructureMotionCurveGeometryDescriptor <: MTLAccelerationStructureGeometryDescriptor

@objcproperties MTLAccelerationStructureMotionCurveGeometryDescriptor begin
    @autoproperty controlPointBuffers::id{NSArray} type = Vector{MTLMotionKeyframeData} setter = setControlPointBuffers
    @autoproperty controlPointCount::UInt64 setter = setControlPointCount
    @autoproperty controlPointStride::UInt64 setter = setControlPointStride
    @autoproperty controlPointFormat::MTLAttributeFormat setter = setControlPointFormat
    @autoproperty radiusBuffers::id{NSArray} type = Vector{MTLMotionKeyframeData} setter = setRadiusBuffers
    @autoproperty radiusFormat::MTLAttributeFormat setter = setRadiusFormat
    @autoproperty radiusStride::UInt64 setter = setRadiusStride
    @autoproperty indexBuffer::id{MTLBuffer} setter = setIndexBuffer
    @autoproperty indexBufferOffset::UInt64 setter = setIndexBufferOffset
    @autoproperty indexType::MTLIndexType setter = setIndexType
    @autoproperty segmentCount::UInt64 setter = setSegmentCount
    @autoproperty segmentControlPointCount::UInt64 setter = setSegmentControlPointCount
    @autoproperty curveType::MTLCurveType setter = setCurveType
    @autoproperty curveBasis::MTLCurveBasis setter = setCurveBasis
    @autoproperty curveEndCaps::MTLCurveEndCaps setter = setCurveEndCaps
end

struct MTLAccelerationStructureInstanceDescriptor
    transformationMatrix::MTLPackedFloat4x3
    options::MTLAccelerationStructureInstanceOptions
    mask::UInt32
    intersectionFunctionTableOffset::UInt32
    accelerationStructureIndex::UInt32
end

struct MTLAccelerationStructureUserIDInstanceDescriptor
    transformationMatrix::MTLPackedFloat4x3
    options::MTLAccelerationStructureInstanceOptions
    mask::UInt32
    intersectionFunctionTableOffset::UInt32
    accelerationStructureIndex::UInt32
    userID::UInt32
end

@cenum MTLAccelerationStructureInstanceDescriptorType::UInt64 begin
    MTLAccelerationStructureInstanceDescriptorTypeDefault = 0x0000000000000000
    MTLAccelerationStructureInstanceDescriptorTypeUserID = 0x0000000000000001
    MTLAccelerationStructureInstanceDescriptorTypeMotion = 0x0000000000000002
    MTLAccelerationStructureInstanceDescriptorTypeIndirect = 0x0000000000000003
    MTLAccelerationStructureInstanceDescriptorTypeIndirectMotion = 0x0000000000000004
end

struct MTLAccelerationStructureMotionInstanceDescriptor
    options::MTLAccelerationStructureInstanceOptions
    mask::UInt32
    intersectionFunctionTableOffset::UInt32
    accelerationStructureIndex::UInt32
    userID::UInt32
    motionTransformsStartIndex::UInt32
    motionTransformsCount::UInt32
    motionStartBorderMode::MTLMotionBorderMode
    motionEndBorderMode::MTLMotionBorderMode
    motionStartTime::Cfloat
    motionEndTime::Cfloat
end

struct MTLIndirectAccelerationStructureInstanceDescriptor
    transformationMatrix::MTLPackedFloat4x3
    options::MTLAccelerationStructureInstanceOptions
    mask::UInt32
    intersectionFunctionTableOffset::UInt32
    userID::UInt32
    accelerationStructureID::MTLResourceID
end

struct MTLIndirectAccelerationStructureMotionInstanceDescriptor
    options::MTLAccelerationStructureInstanceOptions
    mask::UInt32
    intersectionFunctionTableOffset::UInt32
    userID::UInt32
    accelerationStructureID::MTLResourceID
    motionTransformsStartIndex::UInt32
    motionTransformsCount::UInt32
    motionStartBorderMode::MTLMotionBorderMode
    motionEndBorderMode::MTLMotionBorderMode
    motionStartTime::Cfloat
    motionEndTime::Cfloat
end

@cenum MTLTransformType::Int64 begin
    MTLTransformTypePackedFloat4x3 = 0
    MTLTransformTypeComponent = 1
end

@objcwrapper immutable = true MTLAccelerationStructure <: MTLResource

@objcproperties MTLAccelerationStructure begin
    @autoproperty size::UInt64
    @autoproperty gpuResourceID::MTLResourceID
end

@objcwrapper immutable = true MTLInstanceAccelerationStructureDescriptor <: MTLAccelerationStructureDescriptor

@objcproperties MTLInstanceAccelerationStructureDescriptor begin
    @autoproperty instanceDescriptorBuffer::id{MTLBuffer} setter = setInstanceDescriptorBuffer
    @autoproperty instanceDescriptorBufferOffset::UInt64 setter = setInstanceDescriptorBufferOffset
    @autoproperty instanceDescriptorStride::UInt64 setter = setInstanceDescriptorStride
    @autoproperty instanceCount::UInt64 setter = setInstanceCount
    @autoproperty instancedAccelerationStructures::id{NSArray} type = Vector{MTLAccelerationStructure} setter = setInstancedAccelerationStructures
    @autoproperty instanceDescriptorType::MTLAccelerationStructureInstanceDescriptorType setter = setInstanceDescriptorType
    @autoproperty motionTransformBuffer::id{MTLBuffer} setter = setMotionTransformBuffer
    @autoproperty motionTransformBufferOffset::UInt64 setter = setMotionTransformBufferOffset
    @autoproperty motionTransformCount::UInt64 setter = setMotionTransformCount
    @autoproperty instanceTransformationMatrixLayout::MTLMatrixLayout setter = setInstanceTransformationMatrixLayout availability = macos(v"15.0.0")
    @autoproperty motionTransformType::MTLTransformType setter = setMotionTransformType availability = macos(v"15.0.0")
    @autoproperty motionTransformStride::UInt64 setter = setMotionTransformStride availability = macos(v"15.0.0")
end

@objcwrapper immutable = true availability = macos(v"14.0.0") MTLIndirectInstanceAccelerationStructureDescriptor <: MTLAccelerationStructureDescriptor

@objcproperties MTLIndirectInstanceAccelerationStructureDescriptor begin
    @autoproperty instanceDescriptorBuffer::id{MTLBuffer} setter = setInstanceDescriptorBuffer
    @autoproperty instanceDescriptorBufferOffset::UInt64 setter = setInstanceDescriptorBufferOffset
    @autoproperty instanceDescriptorStride::UInt64 setter = setInstanceDescriptorStride
    @autoproperty maxInstanceCount::UInt64 setter = setMaxInstanceCount
    @autoproperty instanceCountBuffer::id{MTLBuffer} setter = setInstanceCountBuffer
    @autoproperty instanceCountBufferOffset::UInt64 setter = setInstanceCountBufferOffset
    @autoproperty instanceDescriptorType::MTLAccelerationStructureInstanceDescriptorType setter = setInstanceDescriptorType
    @autoproperty motionTransformBuffer::id{MTLBuffer} setter = setMotionTransformBuffer
    @autoproperty motionTransformBufferOffset::UInt64 setter = setMotionTransformBufferOffset
    @autoproperty maxMotionTransformCount::UInt64 setter = setMaxMotionTransformCount
    @autoproperty motionTransformCountBuffer::id{MTLBuffer} setter = setMotionTransformCountBuffer
    @autoproperty motionTransformCountBufferOffset::UInt64 setter = setMotionTransformCountBufferOffset
    @autoproperty instanceTransformationMatrixLayout::MTLMatrixLayout setter = setInstanceTransformationMatrixLayout availability = macos(v"15.0.0")
    @autoproperty motionTransformType::MTLTransformType setter = setMotionTransformType availability = macos(v"15.0.0")
    @autoproperty motionTransformStride::UInt64 setter = setMotionTransformStride availability = macos(v"15.0.0")
end

@objcwrapper immutable = false MTLHeapDescriptor <: NSObject

@objcproperties MTLHeapDescriptor begin
    @autoproperty size::UInt64 setter = setSize
    @autoproperty storageMode::MTLStorageMode setter = setStorageMode
    @autoproperty cpuCacheMode::MTLCPUCacheMode setter = setCpuCacheMode
    @autoproperty sparsePageSize::MTLSparsePageSize setter = setSparsePageSize
    @autoproperty hazardTrackingMode::MTLHazardTrackingMode setter = setHazardTrackingMode
    @autoproperty resourceOptions::MTLResourceOptions setter = setResourceOptions
    @autoproperty type::MTLHeapType setter = setType
end

@objcwrapper immutable = true MTLArgumentEncoder <: NSObject

@objcproperties MTLArgumentEncoder begin
    @autoproperty device::id{MTLDevice}
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty encodedLength::UInt64
    @autoproperty alignment::UInt64
end

@cenum MTLCaptureError::Int64 begin
    MTLCaptureErrorNotSupported = 1
    MTLCaptureErrorAlreadyCapturing = 2
    MTLCaptureErrorInvalidDescriptor = 3
end

@cenum MTLCaptureDestination::Int64 begin
    MTLCaptureDestinationDeveloperTools = 1
    MTLCaptureDestinationGPUTraceDocument = 2
end

@objcwrapper immutable = false MTLCaptureDescriptor <: NSObject

@objcproperties MTLCaptureDescriptor begin
    @autoproperty captureObject::id{NSObject} setter = setCaptureObject
    @autoproperty destination::MTLCaptureDestination setter = setDestination
    @autoproperty outputURL::id{NSURL} setter = setOutputURL
end

@objcwrapper immutable = true MTLCaptureScope <: NSObject

@objcproperties MTLCaptureScope begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty device::id{MTLDevice}
    @autoproperty commandQueue::id{MTLCommandQueue}
end

@objcwrapper immutable = true MTLCaptureManager <: NSObject

@objcproperties MTLCaptureManager begin
    @autoproperty defaultCaptureScope::id{MTLCaptureScope} setter = setDefaultCaptureScope
    @autoproperty isCapturing::Bool
end

@objcwrapper immutable = true MTLIndirectRenderCommand <: NSObject

@objcwrapper immutable = true MTLIndirectComputeCommand <: NSObject

@cenum MTLIndirectCommandType::UInt64 begin
    MTLIndirectCommandTypeDraw = 0x0000000000000001
    MTLIndirectCommandTypeDrawIndexed = 0x0000000000000002
    MTLIndirectCommandTypeDrawPatches = 0x0000000000000004
    MTLIndirectCommandTypeDrawIndexedPatches = 0x0000000000000008
    MTLIndirectCommandTypeConcurrentDispatch = 0x0000000000000020
    MTLIndirectCommandTypeConcurrentDispatchThreads = 0x0000000000000040
    MTLIndirectCommandTypeDrawMeshThreadgroups = 0x0000000000000080
    MTLIndirectCommandTypeDrawMeshThreads = 0x0000000000000100
end

struct MTLIndirectCommandBufferExecutionRange
    location::UInt32
    length::UInt32
end

function MTLIndirectCommandBufferExecutionRangeMake(location, length)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLIndirectCommandBufferExecutionRangeMake(location::UInt32, length::UInt32)::MTLIndirectCommandBufferExecutionRange
end

@objcwrapper immutable = true MTLIndirectCommandBufferDescriptor <: NSObject

@objcproperties MTLIndirectCommandBufferDescriptor begin
    @autoproperty commandTypes::MTLIndirectCommandType setter = setCommandTypes
    @autoproperty inheritPipelineState::Bool setter = setInheritPipelineState
    @autoproperty inheritBuffers::Bool setter = setInheritBuffers
    @autoproperty maxVertexBufferBindCount::UInt64 setter = setMaxVertexBufferBindCount
    @autoproperty maxFragmentBufferBindCount::UInt64 setter = setMaxFragmentBufferBindCount
    @autoproperty maxKernelBufferBindCount::UInt64 setter = setMaxKernelBufferBindCount
    @autoproperty maxKernelThreadgroupMemoryBindCount::UInt64 setter = setMaxKernelThreadgroupMemoryBindCount availability = macos(v"14.0.0")
    @autoproperty maxObjectBufferBindCount::UInt64 setter = setMaxObjectBufferBindCount availability = macos(v"14.0.0")
    @autoproperty maxMeshBufferBindCount::UInt64 setter = setMaxMeshBufferBindCount availability = macos(v"14.0.0")
    @autoproperty maxObjectThreadgroupMemoryBindCount::UInt64 setter = setMaxObjectThreadgroupMemoryBindCount availability = macos(v"14.0.0")
    @autoproperty supportRayTracing::Bool setter = setSupportRayTracing
    @autoproperty supportDynamicAttributeStride::Bool setter = setSupportDynamicAttributeStride availability = macos(v"14.0.0")
end

@objcwrapper immutable = true MTLIndirectCommandBuffer <: MTLResource

@objcproperties MTLIndirectCommandBuffer begin
    @autoproperty size::UInt64
    @autoproperty gpuResourceID::MTLResourceID
end

@objcwrapper immutable = false MTLEvent <: NSObject

@objcproperties MTLEvent begin
    @autoproperty device::id{MTLDevice}
    @autoproperty label::id{NSString} setter = setLabel
end

@objcwrapper immutable = true MTLSharedEventListener <: NSObject

@objcproperties MTLSharedEventListener begin
    @autoproperty dispatchQueue::id{dispatch_queue_t}
end

@objcwrapper immutable = false MTLSharedEvent <: MTLEvent

@objcproperties MTLSharedEvent begin
    @autoproperty signaledValue::UInt64 setter = setSignaledValue
end

@objcwrapper immutable = true MTLSharedEventHandle <: NSObject

@objcproperties MTLSharedEventHandle begin
    @autoproperty label::id{NSString}
end

@cenum MTLFunctionLogType::UInt64 begin
    MTLFunctionLogTypeValidation = 0x0000000000000000
end

@objcwrapper immutable = true MTLFunctionLogDebugLocation <: NSObject

@objcproperties MTLFunctionLogDebugLocation begin
    @autoproperty functionName::id{NSString}
    @autoproperty URL::id{NSURL}
    @autoproperty line::UInt64
    @autoproperty column::UInt64
end

@cenum MTLAccelerationStructureRefitOptions::UInt64 begin
    MTLAccelerationStructureRefitOptionVertexData = 0x0000000000000001
    MTLAccelerationStructureRefitOptionPerPrimitiveData = 0x0000000000000002
end

@objcwrapper immutable = true MTLAccelerationStructureCommandEncoder <: MTLCommandEncoder

@objcwrapper immutable = true MTLAccelerationStructurePassSampleBufferAttachmentDescriptor <: NSObject

@objcproperties MTLAccelerationStructurePassSampleBufferAttachmentDescriptor begin
    @autoproperty sampleBuffer::id{MTLCounterSampleBuffer} setter = setSampleBuffer
    @autoproperty startOfEncoderSampleIndex::UInt64 setter = setStartOfEncoderSampleIndex
    @autoproperty endOfEncoderSampleIndex::UInt64 setter = setEndOfEncoderSampleIndex
end

@objcwrapper immutable = true MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray <: NSObject

@objcwrapper immutable = true MTLAccelerationStructurePassDescriptor <: NSObject

@objcproperties MTLAccelerationStructurePassDescriptor begin
    @autoproperty sampleBufferAttachments::id{MTLAccelerationStructurePassSampleBufferAttachmentDescriptorArray}
end

@objcwrapper immutable = true MTLRasterizationRateSampleArray <: NSObject

@objcwrapper immutable = true MTLRasterizationRateLayerDescriptor <: NSObject

@objcproperties MTLRasterizationRateLayerDescriptor begin
    @autoproperty sampleCount::MTLSize
    @autoproperty maxSampleCount::MTLSize
    @autoproperty horizontalSampleStorage::Ptr{Cfloat}
    @autoproperty verticalSampleStorage::Ptr{Cfloat}
    @autoproperty horizontal::id{MTLRasterizationRateSampleArray}
    @autoproperty vertical::id{MTLRasterizationRateSampleArray}
end

@objcwrapper immutable = true MTLRasterizationRateLayerArray <: NSObject

@objcwrapper immutable = true MTLRasterizationRateMapDescriptor <: NSObject

@objcproperties MTLRasterizationRateMapDescriptor begin
    @autoproperty layers::id{MTLRasterizationRateLayerArray}
    @autoproperty screenSize::MTLSize setter = setScreenSize
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty layerCount::UInt64
end

@cenum MTLDynamicLibraryError::UInt64 begin
    MTLDynamicLibraryErrorNone = 0x0000000000000000
    MTLDynamicLibraryErrorInvalidFile = 0x0000000000000001
    MTLDynamicLibraryErrorCompilationFailure = 0x0000000000000002
    MTLDynamicLibraryErrorUnresolvedInstallName = 0x0000000000000003
    MTLDynamicLibraryErrorDependencyLoadFailure = 0x0000000000000004
    MTLDynamicLibraryErrorUnsupported = 0x0000000000000005
end

@cenum MTLLogLevel::Int64 begin
    MTLLogLevelUndefined = 0
    MTLLogLevelDebug = 1
    MTLLogLevelInfo = 2
    MTLLogLevelNotice = 3
    MTLLogLevelError = 4
    MTLLogLevelFault = 5
end

@objcwrapper immutable = true availability = macos(v"15.0.0") MTLLogStateDescriptor <: NSObject

@objcproperties MTLLogStateDescriptor begin
    @autoproperty level::MTLLogLevel setter = setLevel
    @autoproperty bufferSize::Int64 setter = setBufferSize
end

@cenum MTLLogStateError::UInt64 begin
    MTLLogStateErrorInvalidSize = 0x0000000000000001
    MTLLogStateErrorInvalid = 0x0000000000000002
end

@cenum MTLBinaryArchiveError::UInt64 begin
    MTLBinaryArchiveErrorNone = 0x0000000000000000
    MTLBinaryArchiveErrorInvalidFile = 0x0000000000000001
    MTLBinaryArchiveErrorUnexpectedElement = 0x0000000000000002
    MTLBinaryArchiveErrorCompilationFailure = 0x0000000000000003
    MTLBinaryArchiveErrorInternalError = 0x0000000000000004
end

@objcwrapper immutable = false MTLBinaryArchiveDescriptor <: NSObject

@objcproperties MTLBinaryArchiveDescriptor begin
    @autoproperty url::id{NSURL} setter = setUrl
end

@cenum MTLIntersectionFunctionSignature::UInt64 begin
    MTLIntersectionFunctionSignatureNone = 0x0000000000000000
    MTLIntersectionFunctionSignatureInstancing = 0x0000000000000001
    MTLIntersectionFunctionSignatureTriangleData = 0x0000000000000002
    MTLIntersectionFunctionSignatureWorldSpaceData = 0x0000000000000004
    MTLIntersectionFunctionSignatureInstanceMotion = 0x0000000000000008
    MTLIntersectionFunctionSignaturePrimitiveMotion = 0x0000000000000010
    MTLIntersectionFunctionSignatureExtendedLimits = 0x0000000000000020
    MTLIntersectionFunctionSignatureMaxLevels = 0x0000000000000040
    MTLIntersectionFunctionSignatureCurveData = 0x0000000000000080
end

@objcwrapper immutable = true MTLIntersectionFunctionTableDescriptor <: NSObject

@objcproperties MTLIntersectionFunctionTableDescriptor begin
    @autoproperty functionCount::UInt64 setter = setFunctionCount
end

@objcwrapper immutable = true MTLIntersectionFunctionTable <: MTLResource

@objcproperties MTLIntersectionFunctionTable begin
    @autoproperty gpuResourceID::MTLResourceID
end

@cenum MTLStitchedLibraryOptions::UInt64 begin
    MTLStitchedLibraryOptionNone = 0x0000000000000000
    MTLStitchedLibraryOptionFailOnBinaryArchiveMiss = 0x0000000000000001
    MTLStitchedLibraryOptionStoreLibraryInMetalPipelinesScript = 0x0000000000000002
end

@objcwrapper immutable = true MTLFunctionStitchingAttribute <: NSObject

@objcwrapper immutable = true MTLFunctionStitchingAttributeAlwaysInline <: NSObject

@objcwrapper immutable = true MTLFunctionStitchingNode <: NSObject

@objcwrapper immutable = true MTLFunctionStitchingInputNode <: NSObject

@objcproperties MTLFunctionStitchingInputNode begin
    @autoproperty argumentIndex::UInt64 setter = setArgumentIndex
end

@objcwrapper immutable = true MTLFunctionStitchingFunctionNode <: NSObject

@objcproperties MTLFunctionStitchingFunctionNode begin
    @autoproperty name::id{NSString} setter = setName
    @autoproperty arguments::id{NSArray} type = Vector{MTLFunctionStitchingNode} setter = setArguments
    @autoproperty controlDependencies::id{NSArray} type = Vector{MTLFunctionStitchingFunctionNode} setter = setControlDependencies
end

@objcwrapper immutable = true MTLFunctionStitchingGraph <: NSObject

@objcproperties MTLFunctionStitchingGraph begin
    @autoproperty functionName::id{NSString} setter = setFunctionName
    @autoproperty nodes::id{NSArray} type = Vector{MTLFunctionStitchingFunctionNode} setter = setNodes
    @autoproperty outputNode::id{MTLFunctionStitchingFunctionNode} setter = setOutputNode
    @autoproperty attributes::id{NSArray} type = Vector{MTLFunctionStitchingAttribute} setter = setAttributes
end

@objcwrapper immutable = true MTLStitchedLibraryDescriptor <: NSObject

@objcproperties MTLStitchedLibraryDescriptor begin
    @autoproperty functionGraphs::id{NSArray} type = Vector{MTLFunctionStitchingGraph} setter = setFunctionGraphs
    @autoproperty functions::id{NSArray} type = Vector{MTLFunction} setter = setFunctions
    @autoproperty binaryArchives::id{NSArray} type = Vector{MTLBinaryArchive} setter = setBinaryArchives availability = macos(v"15.0.0")
    @autoproperty options::MTLStitchedLibraryOptions setter = setOptions availability = macos(v"15.0.0")
end

@cenum MTLIOPriority::Int64 begin
    MTLIOPriorityHigh = 0
    MTLIOPriorityNormal = 1
    MTLIOPriorityLow = 2
end

@cenum MTLIOCommandQueueType::Int64 begin
    MTLIOCommandQueueTypeConcurrent = 0
    MTLIOCommandQueueTypeSerial = 1
end

@cenum MTLIOError::Int64 begin
    MTLIOErrorURLInvalid = 1
    MTLIOErrorInternal = 2
end

@objcwrapper immutable = true MTLIOCommandQueue <: NSObject

@objcproperties MTLIOCommandQueue begin
    @autoproperty label::id{NSString} setter = setLabel
end

@objcwrapper immutable = true MTLIOScratchBuffer <: NSObject

@objcproperties MTLIOScratchBuffer begin
    @autoproperty buffer::id{MTLBuffer}
end

@objcwrapper immutable = true MTLIOScratchBufferAllocator <: NSObject

@objcwrapper immutable = true MTLIOCommandQueueDescriptor <: NSObject

@objcproperties MTLIOCommandQueueDescriptor begin
    @autoproperty maxCommandBufferCount::UInt64 setter = setMaxCommandBufferCount
    @autoproperty priority::MTLIOPriority setter = setPriority
    @autoproperty type::MTLIOCommandQueueType setter = setType
    @autoproperty maxCommandsInFlight::UInt64 setter = setMaxCommandsInFlight
    @autoproperty scratchBufferAllocator::id{MTLIOScratchBufferAllocator} setter = setScratchBufferAllocator
end

@objcwrapper immutable = true MTLIOFileHandle <: NSObject

@objcproperties MTLIOFileHandle begin
    @autoproperty label::id{NSString} setter = setLabel
end

@cenum MTLIOStatus::Int64 begin
    MTLIOStatusPending = 0
    MTLIOStatusCancelled = 1
    MTLIOStatusError = 2
    MTLIOStatusComplete = 3
end

@objcwrapper immutable = true MTLIOCommandBuffer <: NSObject

@objcproperties MTLIOCommandBuffer begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty status::MTLIOStatus
    @autoproperty error::id{NSError}
end

@cenum MTLIOCompressionStatus::Int64 begin
    MTLIOCompressionStatusComplete = 0
    MTLIOCompressionStatusError = 1
end

const MTLIOCompressionContext = Ptr{Cvoid}

function MTLIOCompressionContextDefaultChunkSize()
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLIOCompressionContextDefaultChunkSize()::Csize_t
end

function MTLIOCreateCompressionContext(path, type, chunkSize)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLIOCreateCompressionContext(path::Cstring, type::MTLIOCompressionMethod, chunkSize::Csize_t)::MTLIOCompressionContext
end

function MTLIOCompressionContextAppendData(context, data, size)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLIOCompressionContextAppendData(context::MTLIOCompressionContext, data::Ptr{Cvoid}, size::Csize_t)::Cvoid
end

function MTLIOFlushAndDestroyCompressionContext(context)
    return @ccall (Symbol("/System/Library/Frameworks/Metal.framework/Resources/BridgeSupport/Metal.dylib")).MTLIOFlushAndDestroyCompressionContext(context::MTLIOCompressionContext)::MTLIOCompressionStatus
end

@objcwrapper immutable = true availability = macos(v"15.0.0") MTLResidencySetDescriptor <: NSObject

@objcproperties MTLResidencySetDescriptor begin
    @autoproperty label::id{NSString} setter = setLabel
    @autoproperty initialCapacity::UInt64 setter = setInitialCapacity
end

@objcwrapper immutable = true availability = macos(v"15.0.0") MTLResidencySet <: NSObject

@objcproperties MTLResidencySet begin
    @autoproperty device::id{MTLDevice}
    @autoproperty label::id{NSString}
    @autoproperty allocatedSize::UInt64
    @autoproperty allAllocations::id{NSArray} type = Vector{MTLAllocation}
    @autoproperty allocationCount::UInt64
end

mutable struct MTLSharedEventHandlePrivate end

mutable struct MTLSharedTextureHandlePrivate end
