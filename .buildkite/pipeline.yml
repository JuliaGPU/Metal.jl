steps:
  # first check if we need to build libcmt or the LLVM back-end

  - label: "Julia 1.8 (with locally-built cmt)"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.8
          persist_depot_dirs: "registries,packages,artifacts,compiled,datadeps,scratchspaces"
      - JuliaCI/julia-test#v1: ~
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    command: |
      julia --project=deps -e 'using Pkg; Pkg.instantiate()'
      julia --project=deps deps/build_cmt.jl
    agents:
      queue: "juliagpu"
      metal: "*"
    if: build.message !~ /\[skip tests\]/ &&
        build.pull_request.labels includes "ci.build_cmt"
    timeout_in_minutes: 60

  - label: "Julia 1.8 (with locally-built LLVM back-end)"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.8
          persist_depot_dirs: "registries,packages,artifacts,compiled,datadeps,scratchspaces"
      - JuliaCI/julia-test#v1: ~
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    command: |
      julia --project=deps -e 'using Pkg; Pkg.instantiate()'
      julia --project=deps deps/build_llvm.jl
    agents:
      queue: "juliagpu"
      metal: "*"
    if: build.message !~ /\[skip tests\]/ &&
        build.pull_request.labels includes "ci.build_llvm"
    timeout_in_minutes: 60

  - wait


  # Julia versions

  - label: "Julia 1.8"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.8
      - JuliaCI/julia-test#v1: ~
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      metal: "*"
    if: build.message !~ /\[skip tests\]/ &&
        !(build.pull_request.labels includes "ci.build_cmt") &&
        !(build.pull_request.labels includes "ci.build_llvm")
    timeout_in_minutes: 60

  # if Julia 1.8 fails, don't bother with other tests
  - wait

  - label: "Julia nightly"
    plugins:
      - JuliaCI/julia#v1:
          version: nightly
      - JuliaCI/julia-test#v1:
          test_args: "--quickfail"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    agents:
      queue: "juliagpu"
      metal: "*"
    if: build.message !~ /\[skip tests\]/ && !build.pull_request.draft
    timeout_in_minutes: 60
    soft_fail:
      - exit_status: 1


  # special tests

  - label: "Metal API Validation"
    plugins:
      - JuliaCI/julia#v1:
          version: 1.8
      - JuliaCI/julia-test#v1:
          test_args: "--quickfail"
      - JuliaCI/julia-coverage#v1:
          codecov: true
          dirs:
            - src
            - lib
            - examples
    env:
      MTL_DEBUG_LAYER: '1'
      MTL_SHADER_VALIDATION: '1'
    agents:
      queue: "juliagpu"
      metal: "*"
    if: build.message !~ /\[skip tests\]/ && !build.pull_request.draft
    timeout_in_minutes: 60
    soft_fail:
      - exit_status: 1

env:
  SECRET_CODECOV_TOKEN: "dysHhdzb4Afv/ogVhu+SVWpcFyzFgwzgpiM3rdPuwwKtzCZVvPYWMCE22WCTUvpJQG/TYY7wmDJA9nH5j1VUd9Y55IamkDDMrOkLsdI+Mu7pmIjfJ0DzRZymP0q5HF4X1lp9YlTErko+ZHYghZktQUqDDWr7g/ponCyNba/uBUEi0wXLISiS+/kRDtOKtAQXV55VdcG7H9pXfWYgWrfDKZVRk/6Jgx6djsYwPYjM6AygFm1SmWRynBIqP/n/H94u8lMTcfv3iFs98RwWja7Nu8rwn82325qqIvE25B3PPPUcYK8KMclKj5FA9U6F/ta58h8zGR/rnKxDJSvER3RF+g==;U2FsdGVkX18jTxzRENWrQI03MQepANTHhy2iYZHwpTzIZnWR26SUBLJCdmJonz0YffMXQuTO0II1VAqgMVnopA=="
